//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace gitter.Git.AccessLayer.CLI.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("gitter.Git.AccessLayer.CLI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Autodetect.
        /// </summary>
        internal static string StrAutodetect {
            get {
                return ResourceManager.GetString("StrAutodetect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Browse.
        /// </summary>
        internal static string StrBrowse {
            get {
                return ResourceManager.GetString("StrBrowse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Command Line Interface.
        /// </summary>
        internal static string StrCommandLineInterface {
            get {
                return ResourceManager.GetString("StrCommandLineInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Download.
        /// </summary>
        internal static string StrDownload {
            get {
                return ResourceManager.GetString("StrDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Found Version.
        /// </summary>
        internal static string StrFoundVersion {
            get {
                return ResourceManager.GetString("StrFoundVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Install.
        /// </summary>
        internal static string StrInstall {
            get {
                return ResourceManager.GetString("StrInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Latest Version.
        /// </summary>
        internal static string StrLatestVersion {
            get {
                return ResourceManager.GetString("StrLatestVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на restart required.
        /// </summary>
        internal static string StrlRestartRequired {
            get {
                return ResourceManager.GetString("StrlRestartRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на unavailable.
        /// </summary>
        internal static string StrlUnavailable {
            get {
                return ResourceManager.GetString("StrlUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path to git.exe.
        /// </summary>
        internal static string StrPathToGitExe {
            get {
                return ResourceManager.GetString("StrPathToGitExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MSysGit command line interface.
        /// </summary>
        internal static string StrProviderName {
            get {
                return ResourceManager.GetString("StrProviderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refresh.
        /// </summary>
        internal static string StrRefresh {
            get {
                return ResourceManager.GetString("StrRefresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Always autodetect.
        /// </summary>
        internal static string StrsAlwaysAutodetect {
            get {
                return ResourceManager.GetString("StrsAlwaysAutodetect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting to remote host.
        /// </summary>
        internal static string StrsConnectingToRemoteHost {
            get {
                return ResourceManager.GetString("StrsConnectingToRemoteHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fallback to ANSI codepage if UTF-8 fails to decode characters.
        /// </summary>
        internal static string StrsFallbackToAnsi {
            get {
                return ResourceManager.GetString("StrsFallbackToAnsi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Log command line interface calls.
        /// </summary>
        internal static string StrsLogCLICalls {
            get {
                return ResourceManager.GetString("StrsLogCLICalls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на searching.
        /// </summary>
        internal static string StrsSearching {
            get {
                return ResourceManager.GetString("StrsSearching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specify manually.
        /// </summary>
        internal static string StrsSpecifyManually {
            get {
                return ResourceManager.GetString("StrsSpecifyManually", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на unknown.
        /// </summary>
        internal static string StrsUnknown {
            get {
                return ResourceManager.GetString("StrsUnknown", resourceCulture);
            }
        }
    }
}
