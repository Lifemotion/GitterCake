//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18051
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace gitter.Git.Gui.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("gitter.Git.Gui.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You have untracked files, which will be overwritten by checking out &apos;{0}&apos;.
        ///Proceed?.
        /// </summary>
        internal static string AskOverwriteUntracked {
            get {
                return ResourceManager.GetString("AskOverwriteUntracked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Removing parameter &apos;{0}&apos;.
        /// </summary>
        internal static string AskRemoveConfigParameter {
            get {
                return ResourceManager.GetString("AskRemoveConfigParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This parameter is not present in repository&apos;s config file, but it is inherited from your user&apos;s git config file and/or system config file.
        ///Do you want to remove this parameter from all files?.
        /// </summary>
        internal static string AskRemoveConfigParameterFromAllFiles {
            get {
                return ResourceManager.GetString("AskRemoveConfigParameterFromAllFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Removing remote reference can be dangerous and lead to loss of data. Proceed?.
        /// </summary>
        internal static string AskRemoveRemoteReference {
            get {
                return ResourceManager.GetString("AskRemoveRemoteReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You have conflicted files in index. Checking out &apos;{0}&apos; will throw them away.
        ///Proceed?.
        /// </summary>
        internal static string AskThrowAwayConflictedChanges {
            get {
                return ResourceManager.GetString("AskThrowAwayConflictedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You have uncommitted local changes. Checking out &apos;{0}&apos; will throw them away.
        ///Proceed?.
        /// </summary>
        internal static string AskThrowAwayLocalChanges {
            get {
                return ResourceManager.GetString("AskThrowAwayLocalChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch you specified is already fully contained in HEAD.
        /// </summary>
        internal static string ErrAlreadyMerged {
            get {
                return ResourceManager.GetString("ErrAlreadyMerged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch already exists.
        /// </summary>
        internal static string ErrBranchAlreadyExists {
            get {
                return ResourceManager.GetString("ErrBranchAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch name cannot be empty.
        /// </summary>
        internal static string ErrBranchNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("ErrBranchNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch not found..
        /// </summary>
        internal static string ErrBranchNotFound {
            get {
                return ResourceManager.GetString("ErrBranchNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to cherry-pick when you have unresolved conflicts.
        ///Resolve conflicts and try again..
        /// </summary>
        internal static string ErrCherryPickIsNotPossibleWithConflicts {
            get {
                return ResourceManager.GetString("ErrCherryPickIsNotPossibleWithConflicts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to cherry-pick when you have local changes.
        ///Commit or stash them and try again..
        /// </summary>
        internal static string ErrCherryPickIsNotPossibleWithLocalChnges {
            get {
                return ResourceManager.GetString("ErrCherryPickIsNotPossibleWithLocalChnges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to clean.
        /// </summary>
        internal static string ErrCleanFailed {
            get {
                return ResourceManager.GetString("ErrCleanFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Directory name cannot end with whitespace.
        /// </summary>
        internal static string ErrDirectoryNameCannotEndWithWhitespace {
            get {
                return ResourceManager.GetString("ErrDirectoryNameCannotEndWithWhitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Directory name cannot start with whitespace.
        /// </summary>
        internal static string ErrDirectoryNameCannotStartWithWhitespace {
            get {
                return ResourceManager.GetString("ErrDirectoryNameCannotStartWithWhitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Email cannot be empty.
        /// </summary>
        internal static string ErrEmailCannotBeEmpty {
            get {
                return ResourceManager.GetString("ErrEmailCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Empty commit message.
        /// </summary>
        internal static string ErrEmptyCommitMessage {
            get {
                return ResourceManager.GetString("ErrEmptyCommitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You must enter a commit message.
        /// </summary>
        internal static string ErrEnterCommitMessage {
            get {
                return ResourceManager.GetString("ErrEnterCommitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter at least {0} symbols as commit message.
        /// </summary>
        internal static string ErrEnterLongerCommitMessage {
            get {
                return ResourceManager.GetString("ErrEnterLongerCommitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to add note.
        /// </summary>
        internal static string ErrFailedToAddNote {
            get {
                return ResourceManager.GetString("ErrFailedToAddNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to add remote.
        /// </summary>
        internal static string ErrFailedToAddRemote {
            get {
                return ResourceManager.GetString("ErrFailedToAddRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to add submodule.
        /// </summary>
        internal static string ErrFailedToAddSubmodule {
            get {
                return ResourceManager.GetString("ErrFailedToAddSubmodule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to apply patch.
        /// </summary>
        internal static string ErrFailedToApplyPatch {
            get {
                return ResourceManager.GetString("ErrFailedToApplyPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to create archive.
        /// </summary>
        internal static string ErrFailedToArchive {
            get {
                return ResourceManager.GetString("ErrFailedToArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to checkout &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToCheckout {
            get {
                return ResourceManager.GetString("ErrFailedToCheckout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to cherry-pick &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToCherryPick {
            get {
                return ResourceManager.GetString("ErrFailedToCherryPick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to clone &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToClone {
            get {
                return ResourceManager.GetString("ErrFailedToClone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to commit.
        /// </summary>
        internal static string ErrFailedToCommit {
            get {
                return ResourceManager.GetString("ErrFailedToCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to compress repository.
        /// </summary>
        internal static string ErrFailedToCompressRepository {
            get {
                return ResourceManager.GetString("ErrFailedToCompressRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to create branch &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToCreateBranch {
            get {
                return ResourceManager.GetString("ErrFailedToCreateBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to create directory.
        /// </summary>
        internal static string ErrFailedToCreateDirectory {
            get {
                return ResourceManager.GetString("ErrFailedToCreateDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to create tag &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToCreateTag {
            get {
                return ResourceManager.GetString("ErrFailedToCreateTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to delete &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToDeletePath {
            get {
                return ResourceManager.GetString("ErrFailedToDeletePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to fetch.
        /// </summary>
        internal static string ErrFailedToFetch {
            get {
                return ResourceManager.GetString("ErrFailedToFetch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to fetch from &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToFetchFrom {
            get {
                return ResourceManager.GetString("ErrFailedToFetchFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to format patch.
        /// </summary>
        internal static string ErrFailedToFormatPatch {
            get {
                return ResourceManager.GetString("ErrFailedToFormatPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to init repository.
        /// </summary>
        internal static string ErrFailedToInit {
            get {
                return ResourceManager.GetString("ErrFailedToInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to merge.
        /// </summary>
        internal static string ErrFailedToMerge {
            get {
                return ResourceManager.GetString("ErrFailedToMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to merge &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToMergeWith {
            get {
                return ResourceManager.GetString("ErrFailedToMergeWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to prune &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToPrune {
            get {
                return ResourceManager.GetString("ErrFailedToPrune", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to pull.
        /// </summary>
        internal static string ErrFailedToPull {
            get {
                return ResourceManager.GetString("ErrFailedToPull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to pull from &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToPullFrom {
            get {
                return ResourceManager.GetString("ErrFailedToPullFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to rebase.
        /// </summary>
        internal static string ErrFailedToRebase {
            get {
                return ResourceManager.GetString("ErrFailedToRebase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to remove branch &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToRemoveBranch {
            get {
                return ResourceManager.GetString("ErrFailedToRemoveBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to remove branch &apos;{0}&apos; from &apos;{1}&apos;.
        /// </summary>
        internal static string ErrFailedToRemoveBranchFrom {
            get {
                return ResourceManager.GetString("ErrFailedToRemoveBranchFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to remove remote &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToRemoveRemote {
            get {
                return ResourceManager.GetString("ErrFailedToRemoveRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to remove tag &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToRemoveTag {
            get {
                return ResourceManager.GetString("ErrFailedToRemoveTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to rename branch &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToRenameBranch {
            get {
                return ResourceManager.GetString("ErrFailedToRenameBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to rename remote &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToRenameRemote {
            get {
                return ResourceManager.GetString("ErrFailedToRenameRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to reset.
        /// </summary>
        internal static string ErrFailedToReset {
            get {
                return ResourceManager.GetString("ErrFailedToReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to apply conflict resolution.
        /// </summary>
        internal static string ErrFailedToResolve {
            get {
                return ResourceManager.GetString("ErrFailedToResolve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to resolve conflict.
        /// </summary>
        internal static string ErrFailedToResolveConflict {
            get {
                return ResourceManager.GetString("ErrFailedToResolveConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to revert.
        /// </summary>
        internal static string ErrFailedToRevert {
            get {
                return ResourceManager.GetString("ErrFailedToRevert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to revert &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToRevertPath {
            get {
                return ResourceManager.GetString("ErrFailedToRevertPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to revert selected files..
        /// </summary>
        internal static string ErrFailedToRevertPaths {
            get {
                return ResourceManager.GetString("ErrFailedToRevertPaths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to run merge tool.
        /// </summary>
        internal static string ErrFailedToRunMergeTool {
            get {
                return ResourceManager.GetString("ErrFailedToRunMergeTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to save patch.
        /// </summary>
        internal static string ErrFailedToSavePatch {
            get {
                return ResourceManager.GetString("ErrFailedToSavePatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to set parameter value.
        /// </summary>
        internal static string ErrFailedToSetParameter {
            get {
                return ResourceManager.GetString("ErrFailedToSetParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to set remote parameters.
        /// </summary>
        internal static string ErrFailedToSetRemoteProperties {
            get {
                return ResourceManager.GetString("ErrFailedToSetRemoteProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to stage.
        /// </summary>
        internal static string ErrFailedToStage {
            get {
                return ResourceManager.GetString("ErrFailedToStage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to stash.
        /// </summary>
        internal static string ErrFailedToStash {
            get {
                return ResourceManager.GetString("ErrFailedToStash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to apply stash.
        /// </summary>
        internal static string ErrFailedToStashApply {
            get {
                return ResourceManager.GetString("ErrFailedToStashApply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to apply &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToStashApplyState {
            get {
                return ResourceManager.GetString("ErrFailedToStashApplyState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to clear stash.
        /// </summary>
        internal static string ErrFailedToStashClear {
            get {
                return ResourceManager.GetString("ErrFailedToStashClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to drop stashed changes.
        /// </summary>
        internal static string ErrFailedToStashDrop {
            get {
                return ResourceManager.GetString("ErrFailedToStashDrop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to drop &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToStashDropState {
            get {
                return ResourceManager.GetString("ErrFailedToStashDropState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to pop stashed state.
        /// </summary>
        internal static string ErrFailedToStashPop {
            get {
                return ResourceManager.GetString("ErrFailedToStashPop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to pop &apos;{0}&apos;.
        /// </summary>
        internal static string ErrFailedToStashPopState {
            get {
                return ResourceManager.GetString("ErrFailedToStashPopState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to unset parameter.
        /// </summary>
        internal static string ErrFailedToUnsetParameter {
            get {
                return ResourceManager.GetString("ErrFailedToUnsetParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to unstage.
        /// </summary>
        internal static string ErrFailedToUnstage {
            get {
                return ResourceManager.GetString("ErrFailedToUnstage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to update submodule.
        /// </summary>
        internal static string ErrFailedToUpdateSubmodule {
            get {
                return ResourceManager.GetString("ErrFailedToUpdateSubmodule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to extract file &apos;{0}&apos;.
        /// </summary>
        internal static string ErrfFailedToQueryBlob {
            get {
                return ResourceManager.GetString("ErrfFailedToQueryBlob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unable to save file &apos;{0}&apos;.
        /// </summary>
        internal static string ErrfFailedToSaveFile {
            get {
                return ResourceManager.GetString("ErrfFailedToSaveFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid branch name.
        /// </summary>
        internal static string ErrInvalidBranchName {
            get {
                return ResourceManager.GetString("ErrInvalidBranchName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid email.
        /// </summary>
        internal static string ErrInvalidEmail {
            get {
                return ResourceManager.GetString("ErrInvalidEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid message.
        /// </summary>
        internal static string ErrInvalidMessage {
            get {
                return ResourceManager.GetString("ErrInvalidMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid parameter name.
        /// </summary>
        internal static string ErrInvalidParameterName {
            get {
                return ResourceManager.GetString("ErrInvalidParameterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid path.
        /// </summary>
        internal static string ErrInvalidPath {
            get {
                return ResourceManager.GetString("ErrInvalidPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid reference name.
        /// </summary>
        internal static string ErrInvalidReferenceName {
            get {
                return ResourceManager.GetString("ErrInvalidReferenceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid refspec.
        /// </summary>
        internal static string ErrInvalidRefspec {
            get {
                return ResourceManager.GetString("ErrInvalidRefspec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid remote name.
        /// </summary>
        internal static string ErrInvalidRemoteName {
            get {
                return ResourceManager.GetString("ErrInvalidRemoteName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid revision expression.
        /// </summary>
        internal static string ErrInvalidRevisionExpression {
            get {
                return ResourceManager.GetString("ErrInvalidRevisionExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid tag name.
        /// </summary>
        internal static string ErrInvalidTagName {
            get {
                return ResourceManager.GetString("ErrInvalidTagName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid URL.
        /// </summary>
        internal static string ErrInvalidUrl {
            get {
                return ResourceManager.GetString("ErrInvalidUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid user name.
        /// </summary>
        internal static string ErrInvalidUserName {
            get {
                return ResourceManager.GetString("ErrInvalidUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You must specify a valid GPG key ID.
        /// </summary>
        internal static string ErrKeyIdCannotBeEmpty {
            get {
                return ResourceManager.GetString("ErrKeyIdCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Message cannot be empty.
        /// </summary>
        internal static string ErrMessageCannotBeEmpty {
            get {
                return ResourceManager.GetString("ErrMessageCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} name cannot not be empty.
        /// </summary>
        internal static string ErrNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("ErrNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} name cannot begin with &apos;{1}&apos; character.
        /// </summary>
        internal static string ErrNameCannotBeginWithCharacter {
            get {
                return ResourceManager.GetString("ErrNameCannotBeginWithCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} name cannot begin with &apos;{1}&apos; sequence.
        /// </summary>
        internal static string ErrNameCannotBeginWithSequence {
            get {
                return ResourceManager.GetString("ErrNameCannotBeginWithSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} name cannot contain ASCII control characters.
        /// </summary>
        internal static string ErrNameCannotContainASCIIControlCharacters {
            get {
                return ResourceManager.GetString("ErrNameCannotContainASCIIControlCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} name cannot contain &apos;{1}&apos; character.
        /// </summary>
        internal static string ErrNameCannotContainCharacter {
            get {
                return ResourceManager.GetString("ErrNameCannotContainCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} name cannot contain &apos;{1}&apos; sequence.
        /// </summary>
        internal static string ErrNameCannotContainSequence {
            get {
                return ResourceManager.GetString("ErrNameCannotContainSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} name cannot end with &apos;{1}&apos; character.
        /// </summary>
        internal static string ErrNameCannotEndWithCharacter {
            get {
                return ResourceManager.GetString("ErrNameCannotEndWithCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} name cannot end with &apos;{1}&apos; sequence.
        /// </summary>
        internal static string ErrNameCannotEndWithSequence {
            get {
                return ResourceManager.GetString("ErrNameCannotEndWithSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No branches selected.
        /// </summary>
        internal static string ErrNoBranchesSelected {
            get {
                return ResourceManager.GetString("ErrNoBranchesSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No branch name specified.
        /// </summary>
        internal static string ErrNoBranchNameSpecified {
            get {
                return ResourceManager.GetString("ErrNoBranchNameSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No files staged for commit.
        /// </summary>
        internal static string ErrNofilesStagedForCommit {
            get {
                return ResourceManager.GetString("ErrNofilesStagedForCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No key ID specified.
        /// </summary>
        internal static string ErrNoKeyIdSpecified {
            get {
                return ResourceManager.GetString("ErrNoKeyIdSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No message specified.
        /// </summary>
        internal static string ErrNoMessageSpecified {
            get {
                return ResourceManager.GetString("ErrNoMessageSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No path specified.
        /// </summary>
        internal static string ErrNoPathSpecified {
            get {
                return ResourceManager.GetString("ErrNoPathSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No remote name specified.
        /// </summary>
        internal static string ErrNoRemoteNameSpecified {
            get {
                return ResourceManager.GetString("ErrNoRemoteNameSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No tag name specified.
        /// </summary>
        internal static string ErrNoTagNameSpecified {
            get {
                return ResourceManager.GetString("ErrNoTagNameSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Nothing to commit.
        /// </summary>
        internal static string ErrNothingToCommit {
            get {
                return ResourceManager.GetString("ErrNothingToCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No URL Specified.
        /// </summary>
        internal static string ErrNoUrlSpecified {
            get {
                return ResourceManager.GetString("ErrNoUrlSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Parameter name cannot be empty.
        /// </summary>
        internal static string ErrParameterNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("ErrParameterNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path cannot be empty.
        /// </summary>
        internal static string ErrPathCannotBeEmpty {
            get {
                return ResourceManager.GetString("ErrPathCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path cannot contain &apos;{0}&apos; character.
        /// </summary>
        internal static string ErrPathCannotContainCharacter {
            get {
                return ResourceManager.GetString("ErrPathCannotContainCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path cannot contain empty directory name.
        /// </summary>
        internal static string ErrPathCannotContainEmptyDirectoryName {
            get {
                return ResourceManager.GetString("ErrPathCannotContainEmptyDirectoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path is too short.
        /// </summary>
        internal static string ErrPathIsTooShort {
            get {
                return ResourceManager.GetString("ErrPathIsTooShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unknown path schema.
        /// </summary>
        internal static string ErrPathUnknownSchema {
            get {
                return ResourceManager.GetString("ErrPathUnknownSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Push to &apos;{0}&apos; failed.
        /// </summary>
        internal static string ErrPushFailed {
            get {
                return ResourceManager.GetString("ErrPushFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refspec cannot be empty.
        /// </summary>
        internal static string ErrRefspecCannotBeEmpty {
            get {
                return ResourceManager.GetString("ErrRefspecCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refspec cannot contain spaces.
        /// </summary>
        internal static string ErrRefspecCannotContainSpaces {
            get {
                return ResourceManager.GetString("ErrRefspecCannotContainSpaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remote already exists.
        /// </summary>
        internal static string ErrRemoteAlreadyExists {
            get {
                return ResourceManager.GetString("ErrRemoteAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remote name cannot be empty.
        /// </summary>
        internal static string ErrRemoteNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("ErrRemoteNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Revision cannot be empty.
        /// </summary>
        internal static string ErrRevisionCannotBeEmpty {
            get {
                return ResourceManager.GetString("ErrRevisionCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Revision is unknown.
        /// </summary>
        internal static string ErrRevisionIsUnknown {
            get {
                return ResourceManager.GetString("ErrRevisionIsUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Message is too short.
        /// </summary>
        internal static string ErrShortCommitMessage {
            get {
                return ResourceManager.GetString("ErrShortCommitMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Slash-separated component cannot begin with &apos;{0}&apos; character.
        /// </summary>
        internal static string ErrSlashSeparatedComponentCannotBeginWithCharacter {
            get {
                return ResourceManager.GetString("ErrSlashSeparatedComponentCannotBeginWithCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch you specified was not found.
        /// </summary>
        internal static string ErrSpecifiedBranchNotFound {
            get {
                return ResourceManager.GetString("ErrSpecifiedBranchNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Starting revision cannot be empty.
        /// </summary>
        internal static string ErrStartingRevisionCannotBeEmpty {
            get {
                return ResourceManager.GetString("ErrStartingRevisionCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tag already exists.
        /// </summary>
        internal static string ErrTagAlreadyExists {
            get {
                return ResourceManager.GetString("ErrTagAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tag name cannot be empty.
        /// </summary>
        internal static string ErrTagNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("ErrTagNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на URL cannot be empty.
        /// </summary>
        internal static string ErrUrlCannotBeEmpty {
            get {
                return ResourceManager.GetString("ErrUrlCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User name cannot be empty.
        /// </summary>
        internal static string ErrUserNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("ErrUserNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You must select at least 1 branch to push.
        /// </summary>
        internal static string ErrYouMustSelectBranchesToPush {
            get {
                return ResourceManager.GetString("ErrYouMustSelectBranchesToPush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You must specify a valid branch to merge with.
        /// </summary>
        internal static string ErrYouMustSpecifyBranchToMergeWith {
            get {
                return ResourceManager.GetString("ErrYouMustSpecifyBranchToMergeWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All {0} must be handled by this repository..
        /// </summary>
        internal static string ExcAllObjectsMustBeHandledByThisRepository {
            get {
                return ResourceManager.GetString("ExcAllObjectsMustBeHandledByThisRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на At least one of supplied {0} is deleted..
        /// </summary>
        internal static string ExcAtLeastOneOfSuppliedObjectIsDeleted {
            get {
                return ResourceManager.GetString("ExcAtLeastOneOfSuppliedObjectIsDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t {0} on detached HEAD..
        /// </summary>
        internal static string ExcCantDoOnDetachedHead {
            get {
                return ResourceManager.GetString("ExcCantDoOnDetachedHead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t {0} on empty repository..
        /// </summary>
        internal static string ExcCantDoOnEmptyRepository {
            get {
                return ResourceManager.GetString("ExcCantDoOnEmptyRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Collection must contain at least 1 {0}..
        /// </summary>
        internal static string ExcCollectionMustContainAtLeastOneObject {
            get {
                return ResourceManager.GetString("ExcCollectionMustContainAtLeastOneObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Collection must not contain null elements..
        /// </summary>
        internal static string ExcCollectionMustNotContainNullElements {
            get {
                return ResourceManager.GetString("ExcCollectionMustNotContainNullElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} is deleted..
        /// </summary>
        internal static string ExcObjectIsDeleted {
            get {
                return ResourceManager.GetString("ExcObjectIsDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} with this name already exists..
        /// </summary>
        internal static string ExcObjectWithThisNameAlreadyExists {
            get {
                return ResourceManager.GetString("ExcObjectWithThisNameAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stash is empty..
        /// </summary>
        internal static string ExcStashIsEmpty {
            get {
                return ResourceManager.GetString("ExcStashIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Supplied {0} is deleted..
        /// </summary>
        internal static string ExcSuppliedObjectIsDeleted {
            get {
                return ResourceManager.GetString("ExcSuppliedObjectIsDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Supplied {0} is not handled by this repository..
        /// </summary>
        internal static string ExcSuppliedObjectIsNotHandledByThisRepository {
            get {
                return ResourceManager.GetString("ExcSuppliedObjectIsNotHandledByThisRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Supplied revision pointer is deleted..
        /// </summary>
        internal static string ExcSuppliedRevisionIsDeleted {
            get {
                return ResourceManager.GetString("ExcSuppliedRevisionIsDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Supplied revision pointer is not handled by this repository..
        /// </summary>
        internal static string ExcSuppliedRevisionIsNotHandledByThisRepository {
            get {
                return ResourceManager.GetString("ExcSuppliedRevisionIsNotHandledByThisRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
        /// </summary>
        internal static System.Drawing.Icon IcoStatusGreen1 {
            get {
                object obj = ResourceManager.GetObject("IcoStatusGreen1", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
        /// </summary>
        internal static System.Drawing.Icon IcoStatusGreen2 {
            get {
                object obj = ResourceManager.GetObject("IcoStatusGreen2", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
        /// </summary>
        internal static System.Drawing.Icon IcoStatusGreen3 {
            get {
                object obj = ResourceManager.GetObject("IcoStatusGreen3", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
        /// </summary>
        internal static System.Drawing.Icon IcoStatusGreen4 {
            get {
                object obj = ResourceManager.GetObject("IcoStatusGreen4", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
        /// </summary>
        internal static System.Drawing.Icon IcoStatusGreen5 {
            get {
                object obj = ResourceManager.GetObject("IcoStatusGreen5", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
        /// </summary>
        internal static System.Drawing.Icon IcoStatusGreen6 {
            get {
                object obj = ResourceManager.GetObject("IcoStatusGreen6", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
        /// </summary>
        internal static System.Drawing.Icon IcoStatusGreen7 {
            get {
                object obj = ResourceManager.GetObject("IcoStatusGreen7", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
        /// </summary>
        internal static System.Drawing.Icon IcoStatusGreen8 {
            get {
                object obj = ResourceManager.GetObject("IcoStatusGreen8", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
        /// </summary>
        internal static System.Drawing.Icon IcoStatusGreen9 {
            get {
                object obj = ResourceManager.GetObject("IcoStatusGreen9", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
        /// </summary>
        internal static System.Drawing.Icon IcoStatusGreen9p {
            get {
                object obj = ResourceManager.GetObject("IcoStatusGreen9p", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgAlignToGraph {
            get {
                object obj = ResourceManager.GetObject("ImgAlignToGraph", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgArchive {
            get {
                object obj = ResourceManager.GetObject("ImgArchive", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgBinary {
            get {
                object obj = ResourceManager.GetObject("ImgBinary", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgBlame {
            get {
                object obj = ResourceManager.GetObject("ImgBlame", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgBranch {
            get {
                object obj = ResourceManager.GetObject("ImgBranch", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgBranchAdd {
            get {
                object obj = ResourceManager.GetObject("ImgBranchAdd", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgBranchDel {
            get {
                object obj = ResourceManager.GetObject("ImgBranchDel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgBranchProperties {
            get {
                object obj = ResourceManager.GetObject("ImgBranchProperties", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgBranchRemote {
            get {
                object obj = ResourceManager.GetObject("ImgBranchRemote", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgBranchRemoteDel {
            get {
                object obj = ResourceManager.GetObject("ImgBranchRemoteDel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgBranchRename {
            get {
                object obj = ResourceManager.GetObject("ImgBranchRename", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgCheckout {
            get {
                object obj = ResourceManager.GetObject("ImgCheckout", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgCherryPick {
            get {
                object obj = ResourceManager.GetObject("ImgCherryPick", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgClean {
            get {
                object obj = ResourceManager.GetObject("ImgClean", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgClear {
            get {
                object obj = ResourceManager.GetObject("ImgClear", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgClone {
            get {
                object obj = ResourceManager.GetObject("ImgClone", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgCommit {
            get {
                object obj = ResourceManager.GetObject("ImgCommit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgCompress {
            get {
                object obj = ResourceManager.GetObject("ImgCompress", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgConfig {
            get {
                object obj = ResourceManager.GetObject("ImgConfig", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgConfigAdd {
            get {
                object obj = ResourceManager.GetObject("ImgConfigAdd", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgConfigEdit {
            get {
                object obj = ResourceManager.GetObject("ImgConfigEdit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgConfigRemove {
            get {
                object obj = ResourceManager.GetObject("ImgConfigRemove", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgConfiguration {
            get {
                object obj = ResourceManager.GetObject("ImgConfiguration", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgCopyToClipboard {
            get {
                object obj = ResourceManager.GetObject("ImgCopyToClipboard", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgDateOrder {
            get {
                object obj = ResourceManager.GetObject("ImgDateOrder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgDelete {
            get {
                object obj = ResourceManager.GetObject("ImgDelete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgDiff {
            get {
                object obj = ResourceManager.GetObject("ImgDiff", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgDocument {
            get {
                object obj = ResourceManager.GetObject("ImgDocument", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgFetch {
            get {
                object obj = ResourceManager.GetObject("ImgFetch", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgFileDelete {
            get {
                object obj = ResourceManager.GetObject("ImgFileDelete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgFileHistory {
            get {
                object obj = ResourceManager.GetObject("ImgFileHistory", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgFileRevert {
            get {
                object obj = ResourceManager.GetObject("ImgFileRevert", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgFileStage {
            get {
                object obj = ResourceManager.GetObject("ImgFileStage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgFileUnstage {
            get {
                object obj = ResourceManager.GetObject("ImgFileUnstage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgFilter {
            get {
                object obj = ResourceManager.GetObject("ImgFilter", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgFolder {
            get {
                object obj = ResourceManager.GetObject("ImgFolder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgFolderHistory {
            get {
                object obj = ResourceManager.GetObject("ImgFolderHistory", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgFolderStage {
            get {
                object obj = ResourceManager.GetObject("ImgFolderStage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgFolderTree {
            get {
                object obj = ResourceManager.GetObject("ImgFolderTree", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgFolderUnstage {
            get {
                object obj = ResourceManager.GetObject("ImgFolderUnstage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgFolderUp {
            get {
                object obj = ResourceManager.GetObject("ImgFolderUp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgGC {
            get {
                object obj = ResourceManager.GetObject("ImgGC", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgGit {
            get {
                object obj = ResourceManager.GetObject("ImgGit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgGraph {
            get {
                object obj = ResourceManager.GetObject("ImgGraph", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgGraphChildren {
            get {
                object obj = ResourceManager.GetObject("ImgGraphChildren", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgHistory {
            get {
                object obj = ResourceManager.GetObject("ImgHistory", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgInfo48 {
            get {
                object obj = ResourceManager.GetObject("ImgInfo48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgInit {
            get {
                object obj = ResourceManager.GetObject("ImgInit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgLessContext {
            get {
                object obj = ResourceManager.GetObject("ImgLessContext", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgLinesAdded {
            get {
                object obj = ResourceManager.GetObject("ImgLinesAdded", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgLinesRemoved {
            get {
                object obj = ResourceManager.GetObject("ImgLinesRemoved", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgMail {
            get {
                object obj = ResourceManager.GetObject("ImgMail", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgMailSend {
            get {
                object obj = ResourceManager.GetObject("ImgMailSend", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgMarkAsResolved {
            get {
                object obj = ResourceManager.GetObject("ImgMarkAsResolved", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgMerge {
            get {
                object obj = ResourceManager.GetObject("ImgMerge", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgMinus {
            get {
                object obj = ResourceManager.GetObject("ImgMinus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgMoreContext {
            get {
                object obj = ResourceManager.GetObject("ImgMoreContext", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgNote {
            get {
                object obj = ResourceManager.GetObject("ImgNote", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgNoteAdd {
            get {
                object obj = ResourceManager.GetObject("ImgNoteAdd", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgNoteDel {
            get {
                object obj = ResourceManager.GetObject("ImgNoteDel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgNoteEdit {
            get {
                object obj = ResourceManager.GetObject("ImgNoteEdit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgOverlayAdd {
            get {
                object obj = ResourceManager.GetObject("ImgOverlayAdd", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgOverlayAddStaged {
            get {
                object obj = ResourceManager.GetObject("ImgOverlayAddStaged", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgOverlayCancel {
            get {
                object obj = ResourceManager.GetObject("ImgOverlayCancel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgOverlayChmod {
            get {
                object obj = ResourceManager.GetObject("ImgOverlayChmod", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgOverlayConflict {
            get {
                object obj = ResourceManager.GetObject("ImgOverlayConflict", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgOverlayCopy {
            get {
                object obj = ResourceManager.GetObject("ImgOverlayCopy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgOverlayDel {
            get {
                object obj = ResourceManager.GetObject("ImgOverlayDel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgOverlayDelStaged {
            get {
                object obj = ResourceManager.GetObject("ImgOverlayDelStaged", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgOverlayEdit {
            get {
                object obj = ResourceManager.GetObject("ImgOverlayEdit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgOverlayEditStaged {
            get {
                object obj = ResourceManager.GetObject("ImgOverlayEditStaged", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgOverlayOk {
            get {
                object obj = ResourceManager.GetObject("ImgOverlayOk", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgOverlayRename {
            get {
                object obj = ResourceManager.GetObject("ImgOverlayRename", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgPanel {
            get {
                object obj = ResourceManager.GetObject("ImgPanel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgPatch {
            get {
                object obj = ResourceManager.GetObject("ImgPatch", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgPatchApply {
            get {
                object obj = ResourceManager.GetObject("ImgPatchApply", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgPatchSave {
            get {
                object obj = ResourceManager.GetObject("ImgPatchSave", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgPlus {
            get {
                object obj = ResourceManager.GetObject("ImgPlus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgPull {
            get {
                object obj = ResourceManager.GetObject("ImgPull", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgPush {
            get {
                object obj = ResourceManager.GetObject("ImgPush", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgRebase {
            get {
                object obj = ResourceManager.GetObject("ImgRebase", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgRebaseAbort {
            get {
                object obj = ResourceManager.GetObject("ImgRebaseAbort", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgRebaseContinue {
            get {
                object obj = ResourceManager.GetObject("ImgRebaseContinue", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgRebaseSkip {
            get {
                object obj = ResourceManager.GetObject("ImgRebaseSkip", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgRefresh {
            get {
                object obj = ResourceManager.GetObject("ImgRefresh", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgRefsHeads {
            get {
                object obj = ResourceManager.GetObject("ImgRefsHeads", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgRefsRemotes {
            get {
                object obj = ResourceManager.GetObject("ImgRefsRemotes", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgRefsTags {
            get {
                object obj = ResourceManager.GetObject("ImgRefsTags", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgRemote {
            get {
                object obj = ResourceManager.GetObject("ImgRemote", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgRemoteAdd {
            get {
                object obj = ResourceManager.GetObject("ImgRemoteAdd", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgRemoteProperties {
            get {
                object obj = ResourceManager.GetObject("ImgRemoteProperties", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgRemoteRemove {
            get {
                object obj = ResourceManager.GetObject("ImgRemoteRemove", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgRemoteRename {
            get {
                object obj = ResourceManager.GetObject("ImgRemoteRename", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgRemotes {
            get {
                object obj = ResourceManager.GetObject("ImgRemotes", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgReset {
            get {
                object obj = ResourceManager.GetObject("ImgReset", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgRevert {
            get {
                object obj = ResourceManager.GetObject("ImgRevert", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgSearch {
            get {
                object obj = ResourceManager.GetObject("ImgSearch", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgSearchClose {
            get {
                object obj = ResourceManager.GetObject("ImgSearchClose", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgSearchNext {
            get {
                object obj = ResourceManager.GetObject("ImgSearchNext", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgSearchPrevious {
            get {
                object obj = ResourceManager.GetObject("ImgSearchPrevious", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgSplitPanelHorizontal {
            get {
                object obj = ResourceManager.GetObject("ImgSplitPanelHorizontal", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgSplitPanelVertical {
            get {
                object obj = ResourceManager.GetObject("ImgSplitPanelVertical", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgStage {
            get {
                object obj = ResourceManager.GetObject("ImgStage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgStageAll {
            get {
                object obj = ResourceManager.GetObject("ImgStageAll", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgStash {
            get {
                object obj = ResourceManager.GetObject("ImgStash", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgStashAdd {
            get {
                object obj = ResourceManager.GetObject("ImgStashAdd", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgStashApply {
            get {
                object obj = ResourceManager.GetObject("ImgStashApply", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgStashClear {
            get {
                object obj = ResourceManager.GetObject("ImgStashClear", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgStashDel {
            get {
                object obj = ResourceManager.GetObject("ImgStashDel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgStashPop {
            get {
                object obj = ResourceManager.GetObject("ImgStashPop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgStashSave {
            get {
                object obj = ResourceManager.GetObject("ImgStashSave", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgStatusClean {
            get {
                object obj = ResourceManager.GetObject("ImgStatusClean", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgSubmodule {
            get {
                object obj = ResourceManager.GetObject("ImgSubmodule", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgSubmoduleAdd {
            get {
                object obj = ResourceManager.GetObject("ImgSubmoduleAdd", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgSubmoduleDel {
            get {
                object obj = ResourceManager.GetObject("ImgSubmoduleDel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgSubmodules {
            get {
                object obj = ResourceManager.GetObject("ImgSubmodules", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgTag {
            get {
                object obj = ResourceManager.GetObject("ImgTag", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgTagAdd {
            get {
                object obj = ResourceManager.GetObject("ImgTagAdd", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgTagAnnotated {
            get {
                object obj = ResourceManager.GetObject("ImgTagAnnotated", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgTagDel {
            get {
                object obj = ResourceManager.GetObject("ImgTagDel", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgTerminal {
            get {
                object obj = ResourceManager.GetObject("ImgTerminal", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgTopoOrder {
            get {
                object obj = ResourceManager.GetObject("ImgTopoOrder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgUnstage {
            get {
                object obj = ResourceManager.GetObject("ImgUnstage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgUnstageAll {
            get {
                object obj = ResourceManager.GetObject("ImgUnstageAll", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgUser {
            get {
                object obj = ResourceManager.GetObject("ImgUser", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgUsers {
            get {
                object obj = ResourceManager.GetObject("ImgUsers", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgUserUnknown {
            get {
                object obj = ResourceManager.GetObject("ImgUserUnknown", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgViewReflog {
            get {
                object obj = ResourceManager.GetObject("ImgViewReflog", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgViewReflogRemote {
            get {
                object obj = ResourceManager.GetObject("ImgViewReflogRemote", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgWarning {
            get {
                object obj = ResourceManager.GetObject("ImgWarning", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ImgWarning48 {
            get {
                object obj = ResourceManager.GetObject("ImgWarning48", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You have no git installed. Please install required minimum version or newer to proceed..
        /// </summary>
        internal static string MsgGitIsNotInstalled {
            get {
                return ResourceManager.GetString("MsgGitIsNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на git support will be disabled until at least the required version is installed..
        /// </summary>
        internal static string MsgGitSupportWillBeDisabled {
            get {
                return ResourceManager.GetString("MsgGitSupportWillBeDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Your git version is older than required minimum version. Please install required minimum version or newer to proceed..
        /// </summary>
        internal static string MsgGitVersionIsOutdated {
            get {
                return ResourceManager.GetString("MsgGitVersionIsOutdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Required git version is detected, you may proceed now..
        /// </summary>
        internal static string MsgGitVersionOk {
            get {
                return ResourceManager.GetString("MsgGitVersionOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Abbreviate.
        /// </summary>
        internal static string StrAbbreviate {
            get {
                return ResourceManager.GetString("StrAbbreviate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Abort.
        /// </summary>
        internal static string StrAbort {
            get {
                return ResourceManager.GetString("StrAbort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Access Method.
        /// </summary>
        internal static string StrAccessMethod {
            get {
                return ResourceManager.GetString("StrAccessMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add.
        /// </summary>
        internal static string StrAdd {
            get {
                return ResourceManager.GetString("StrAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Added.
        /// </summary>
        internal static string StrAdded {
            get {
                return ResourceManager.GetString("StrAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Added Files.
        /// </summary>
        internal static string StrAddedFiles {
            get {
                return ResourceManager.GetString("StrAddedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add Files.
        /// </summary>
        internal static string StrAddFiles {
            get {
                return ResourceManager.GetString("StrAddFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add From Clipboard.
        /// </summary>
        internal static string StrAddFromClipboard {
            get {
                return ResourceManager.GetString("StrAddFromClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Additional.
        /// </summary>
        internal static string StrAdditional {
            get {
                return ResourceManager.GetString("StrAdditional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add Note.
        /// </summary>
        internal static string StrAddNote {
            get {
                return ResourceManager.GetString("StrAddNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add Parameter.
        /// </summary>
        internal static string StrAddParameter {
            get {
                return ResourceManager.GetString("StrAddParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add Remote.
        /// </summary>
        internal static string StrAddRemote {
            get {
                return ResourceManager.GetString("StrAddRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add Submodule.
        /// </summary>
        internal static string StrAddSubmodule {
            get {
                return ResourceManager.GetString("StrAddSubmodule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Advanced Options.
        /// </summary>
        internal static string StrAdvancedOptions {
            get {
                return ResourceManager.GetString("StrAdvancedOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Align to Graph.
        /// </summary>
        internal static string StrAlignToGraph {
            get {
                return ResourceManager.GetString("StrAlignToGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All.
        /// </summary>
        internal static string StrAll {
            get {
                return ResourceManager.GetString("StrAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Amend.
        /// </summary>
        internal static string StrAmend {
            get {
                return ResourceManager.GetString("StrAmend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Annotated.
        /// </summary>
        internal static string StrAnnotatedTag {
            get {
                return ResourceManager.GetString("StrAnnotatedTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Apply.
        /// </summary>
        internal static string StrApply {
            get {
                return ResourceManager.GetString("StrApply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Apply Patches.
        /// </summary>
        internal static string StrApplyPatches {
            get {
                return ResourceManager.GetString("StrApplyPatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Apply to.
        /// </summary>
        internal static string StrApplyTo {
            get {
                return ResourceManager.GetString("StrApplyTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Archive.
        /// </summary>
        internal static string StrArchive {
            get {
                return ResourceManager.GetString("StrArchive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch &apos;{0}&apos; already exists.
        ///Reset existing branch instead of creating a new one?.
        /// </summary>
        internal static string StrAskBranchExists {
            get {
                return ResourceManager.GetString("StrAskBranchExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The branch &apos;{0}&apos; is not fully merged.
        ///Are you sure you want to delete it?.
        /// </summary>
        internal static string StrAskBranchIsNotFullyMerged {
            get {
                return ResourceManager.GetString("StrAskBranchIsNotFullyMerged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You are about to delete &apos;{0}&apos;.
        ///Proceed?.
        /// </summary>
        internal static string StrAskDeletePath {
            get {
                return ResourceManager.GetString("StrAskDeletePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All your changes (both staged and unstaged) will be lost.
        ///This operation cannot be undone.
        ///Proceed?.
        /// </summary>
        internal static string StrAskHardReset {
            get {
                return ResourceManager.GetString("StrAskHardReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch &apos;{0}&apos; is not associated with any remote.
        ///Are you sure you want to remove it?.
        /// </summary>
        internal static string StrAskRemoteBranchRemove {
            get {
                return ResourceManager.GetString("StrAskRemoteBranchRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You are about to lose changes made to &apos;{0}&apos;.
        ///Proceed?.
        /// </summary>
        internal static string StrAskRevertPath {
            get {
                return ResourceManager.GetString("StrAskRevertPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You are about to lose changes made to selected files.
        ///Proceed?.
        /// </summary>
        internal static string StrAskRevertPaths {
            get {
                return ResourceManager.GetString("StrAskRevertPaths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Author.
        /// </summary>
        internal static string StrAuthor {
            get {
                return ResourceManager.GetString("StrAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Author Date.
        /// </summary>
        internal static string StrAuthorDate {
            get {
                return ResourceManager.GetString("StrAuthorDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Author Email.
        /// </summary>
        internal static string StrAuthorEmail {
            get {
                return ResourceManager.GetString("StrAuthorEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Autodetect.
        /// </summary>
        internal static string StrAutodetect {
            get {
                return ResourceManager.GetString("StrAutodetect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Auto.
        /// </summary>
        internal static string StrAutoFormat {
            get {
                return ResourceManager.GetString("StrAutoFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Auto Show Diff.
        /// </summary>
        internal static string StrAutoShowDiff {
            get {
                return ResourceManager.GetString("StrAutoShowDiff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bare.
        /// </summary>
        internal static string StrBare {
            get {
                return ResourceManager.GetString("StrBare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Behavior.
        /// </summary>
        internal static string StrBehavior {
            get {
                return ResourceManager.GetString("StrBehavior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Binary.
        /// </summary>
        internal static string StrBinary {
            get {
                return ResourceManager.GetString("StrBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Blame.
        /// </summary>
        internal static string StrBlame {
            get {
                return ResourceManager.GetString("StrBlame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Body.
        /// </summary>
        internal static string StrBody {
            get {
                return ResourceManager.GetString("StrBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Both.
        /// </summary>
        internal static string StrBoth {
            get {
                return ResourceManager.GetString("StrBoth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bottom-aligned Details.
        /// </summary>
        internal static string StrBottomAlignedDetails {
            get {
                return ResourceManager.GetString("StrBottomAlignedDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branch.
        /// </summary>
        internal static string StrBranch {
            get {
                return ResourceManager.GetString("StrBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branches.
        /// </summary>
        internal static string StrBranches {
            get {
                return ResourceManager.GetString("StrBranches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Branches to push.
        /// </summary>
        internal static string StrBranchesToPush {
            get {
                return ResourceManager.GetString("StrBranchesToPush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Browse.
        /// </summary>
        internal static string StrBrowse {
            get {
                return ResourceManager.GetString("StrBrowse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Changed Files.
        /// </summary>
        internal static string StrChangedFiles {
            get {
                return ResourceManager.GetString("StrChangedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change Identity.
        /// </summary>
        internal static string StrChangeIdentity {
            get {
                return ResourceManager.GetString("StrChangeIdentity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checkout.
        /// </summary>
        internal static string StrCheckout {
            get {
                return ResourceManager.GetString("StrCheckout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checkout after creation.
        /// </summary>
        internal static string StrCheckoutAfterCreation {
            get {
                return ResourceManager.GetString("StrCheckoutAfterCreation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checkout Revision.
        /// </summary>
        internal static string StrCheckoutRevision {
            get {
                return ResourceManager.GetString("StrCheckoutRevision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cherry-Pick.
        /// </summary>
        internal static string StrCherryPick {
            get {
                return ResourceManager.GetString("StrCherryPick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cherry-Pick Commit.
        /// </summary>
        internal static string StrCherryPickCommit {
            get {
                return ResourceManager.GetString("StrCherryPickCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Chmod.
        /// </summary>
        internal static string StrChmod {
            get {
                return ResourceManager.GetString("StrChmod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clean.
        /// </summary>
        internal static string StrClean {
            get {
                return ResourceManager.GetString("StrClean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clean Ignored.
        /// </summary>
        internal static string StrCleanIgnored {
            get {
                return ResourceManager.GetString("StrCleanIgnored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clean Untracked.
        /// </summary>
        internal static string StrCleanUntracked {
            get {
                return ResourceManager.GetString("StrCleanUntracked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clear.
        /// </summary>
        internal static string StrClear {
            get {
                return ResourceManager.GetString("StrClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clone.
        /// </summary>
        internal static string StrClone {
            get {
                return ResourceManager.GetString("StrClone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clone Repository.
        /// </summary>
        internal static string StrCloneRepository {
            get {
                return ResourceManager.GetString("StrCloneRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cloning Repository.
        /// </summary>
        internal static string StrCloningRepository {
            get {
                return ResourceManager.GetString("StrCloningRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Close.
        /// </summary>
        internal static string StrClose {
            get {
                return ResourceManager.GetString("StrClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Collapse All.
        /// </summary>
        internal static string StrCollapseAll {
            get {
                return ResourceManager.GetString("StrCollapseAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Commit.
        /// </summary>
        internal static string StrCommit {
            get {
                return ResourceManager.GetString("StrCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Commit Changes.
        /// </summary>
        internal static string StrCommitChanges {
            get {
                return ResourceManager.GetString("StrCommitChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Commit Date.
        /// </summary>
        internal static string StrCommitDate {
            get {
                return ResourceManager.GetString("StrCommitDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Commits.
        /// </summary>
        internal static string StrCommits {
            get {
                return ResourceManager.GetString("StrCommits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Committer.
        /// </summary>
        internal static string StrCommitter {
            get {
                return ResourceManager.GetString("StrCommitter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Committer Email.
        /// </summary>
        internal static string StrCommitterEmail {
            get {
                return ResourceManager.GetString("StrCommitterEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Committers.
        /// </summary>
        internal static string StrCommitters {
            get {
                return ResourceManager.GetString("StrCommitters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Compare.
        /// </summary>
        internal static string StrCompare {
            get {
                return ResourceManager.GetString("StrCompare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Compare With.
        /// </summary>
        internal static string StrCompareWith {
            get {
                return ResourceManager.GetString("StrCompareWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Completed.
        /// </summary>
        internal static string StrCompleted {
            get {
                return ResourceManager.GetString("StrCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Compress Repository.
        /// </summary>
        internal static string StrCompressRepository {
            get {
                return ResourceManager.GetString("StrCompressRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Configuration.
        /// </summary>
        internal static string StrConfig {
            get {
                return ResourceManager.GetString("StrConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Conflicting Files.
        /// </summary>
        internal static string StrConflictingFiles {
            get {
                return ResourceManager.GetString("StrConflictingFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Conflict Resolution.
        /// </summary>
        internal static string StrConflictResolution {
            get {
                return ResourceManager.GetString("StrConflictResolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Conflicts.
        /// </summary>
        internal static string StrConflicts {
            get {
                return ResourceManager.GetString("StrConflicts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Context.
        /// </summary>
        internal static string StrContext {
            get {
                return ResourceManager.GetString("StrContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Contextual Diff.
        /// </summary>
        internal static string StrContextualDiff {
            get {
                return ResourceManager.GetString("StrContextualDiff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Continue.
        /// </summary>
        internal static string StrContinue {
            get {
                return ResourceManager.GetString("StrContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Contributors.
        /// </summary>
        internal static string StrContributors {
            get {
                return ResourceManager.GetString("StrContributors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copied.
        /// </summary>
        internal static string StrCopied {
            get {
                return ResourceManager.GetString("StrCopied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy.
        /// </summary>
        internal static string StrCopy {
            get {
                return ResourceManager.GetString("StrCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy as Patch.
        /// </summary>
        internal static string StrCopyAsPatch {
            get {
                return ResourceManager.GetString("StrCopyAsPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy New Version.
        /// </summary>
        internal static string StrCopyNewVersion {
            get {
                return ResourceManager.GetString("StrCopyNewVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy Old Version.
        /// </summary>
        internal static string StrCopyOldVersion {
            get {
                return ResourceManager.GetString("StrCopyOldVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Copy to Clipboard.
        /// </summary>
        internal static string StrCopyToClipboard {
            get {
                return ResourceManager.GetString("StrCopyToClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create.
        /// </summary>
        internal static string StrCreate {
            get {
                return ResourceManager.GetString("StrCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create Branch.
        /// </summary>
        internal static string StrCreateBranch {
            get {
                return ResourceManager.GetString("StrCreateBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create branch reflog.
        /// </summary>
        internal static string StrCreateBranchReflog {
            get {
                return ResourceManager.GetString("StrCreateBranchReflog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create Tag.
        /// </summary>
        internal static string StrCreateTag {
            get {
                return ResourceManager.GetString("StrCreateTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current Branch.
        /// </summary>
        internal static string StrCurrentBranch {
            get {
                return ResourceManager.GetString("StrCurrentBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current User.
        /// </summary>
        internal static string StrCurrentUser {
            get {
                return ResourceManager.GetString("StrCurrentUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Date.
        /// </summary>
        internal static string StrDate {
            get {
                return ResourceManager.GetString("StrDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Date Format.
        /// </summary>
        internal static string StrDateFormat {
            get {
                return ResourceManager.GetString("StrDateFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Date Order.
        /// </summary>
        internal static string StrDateOrder {
            get {
                return ResourceManager.GetString("StrDateOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Default.
        /// </summary>
        internal static string StrDefault {
            get {
                return ResourceManager.GetString("StrDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Default Format.
        /// </summary>
        internal static string StrDefaultFormat {
            get {
                return ResourceManager.GetString("StrDefaultFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete.
        /// </summary>
        internal static string StrDelete {
            get {
                return ResourceManager.GetString("StrDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete Branch.
        /// </summary>
        internal static string StrDeleteBranch {
            get {
                return ResourceManager.GetString("StrDeleteBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete File.
        /// </summary>
        internal static string StrDeleteFile {
            get {
                return ResourceManager.GetString("StrDeleteFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Depth.
        /// </summary>
        internal static string StrDepth {
            get {
                return ResourceManager.GetString("StrDepth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Destination File Name.
        /// </summary>
        internal static string StrDestinationFileName {
            get {
                return ResourceManager.GetString("StrDestinationFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Diff.
        /// </summary>
        internal static string StrDiff {
            get {
                return ResourceManager.GetString("StrDiff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Don&apos;t fetch tags.
        /// </summary>
        internal static string StrDontFetchTags {
            get {
                return ResourceManager.GetString("StrDontFetchTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Don&apos;t Track.
        /// </summary>
        internal static string StrDontTrack {
            get {
                return ResourceManager.GetString("StrDontTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Download.
        /// </summary>
        internal static string StrDownload {
            get {
                return ResourceManager.GetString("StrDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Drop.
        /// </summary>
        internal static string StrDrop {
            get {
                return ResourceManager.GetString("StrDrop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Edit.
        /// </summary>
        internal static string StrEdit {
            get {
                return ResourceManager.GetString("StrEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Edit Value.
        /// </summary>
        internal static string StrEditValue {
            get {
                return ResourceManager.GetString("StrEditValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Email.
        /// </summary>
        internal static string StrEmail {
            get {
                return ResourceManager.GetString("StrEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Example.
        /// </summary>
        internal static string StrExample {
            get {
                return ResourceManager.GetString("StrExample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Expand All.
        /// </summary>
        internal static string StrExpandAll {
            get {
                return ResourceManager.GetString("StrExpandAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cloning {0}.
        /// </summary>
        internal static string StrfCloning {
            get {
                return ResourceManager.GetString("StrfCloning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fetch.
        /// </summary>
        internal static string StrFetch {
            get {
                return ResourceManager.GetString("StrFetch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fetch All.
        /// </summary>
        internal static string StrFetchAll {
            get {
                return ResourceManager.GetString("StrFetchAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fetching data from &apos;{0}&apos;....
        /// </summary>
        internal static string StrFetchingDataFrom {
            get {
                return ResourceManager.GetString("StrFetchingDataFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fetching data from remote repository....
        /// </summary>
        internal static string StrFetchingDataFromRemoteRepository {
            get {
                return ResourceManager.GetString("StrFetchingDataFromRemoteRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fetching Log.
        /// </summary>
        internal static string StrFetchingLog {
            get {
                return ResourceManager.GetString("StrFetchingLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fetch None.
        /// </summary>
        internal static string StrFetchNone {
            get {
                return ResourceManager.GetString("StrFetchNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fetch Remote.
        /// </summary>
        internal static string StrFetchRemote {
            get {
                return ResourceManager.GetString("StrFetchRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fetch URL.
        /// </summary>
        internal static string StrFetchUrl {
            get {
                return ResourceManager.GetString("StrFetchUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File Name.
        /// </summary>
        internal static string StrFileName {
            get {
                return ResourceManager.GetString("StrFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Files.
        /// </summary>
        internal static string StrFiles {
            get {
                return ResourceManager.GetString("StrFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Filter.
        /// </summary>
        internal static string StrFilter {
            get {
                return ResourceManager.GetString("StrFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Find.
        /// </summary>
        internal static string StrFind {
            get {
                return ResourceManager.GetString("StrFind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0} more changes are not shown.
        /// </summary>
        internal static string StrfNMoreChangesAreNotShown {
            get {
                return ResourceManager.GetString("StrfNMoreChangesAreNotShown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Force overwrite remote branches.
        /// </summary>
        internal static string StrForceOverwriteRemoteBranches {
            get {
                return ResourceManager.GetString("StrForceOverwriteRemoteBranches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Found Version.
        /// </summary>
        internal static string StrFoundVersion {
            get {
                return ResourceManager.GetString("StrFoundVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на From.
        /// </summary>
        internal static string StrFrom {
            get {
                return ResourceManager.GetString("StrFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Full Name.
        /// </summary>
        internal static string StrFullName {
            get {
                return ResourceManager.GetString("StrFullName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Full Path.
        /// </summary>
        internal static string StrFullPath {
            get {
                return ResourceManager.GetString("StrFullPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на v.{0} is required.
        /// </summary>
        internal static string StrfVersionRequired {
            get {
                return ResourceManager.GetString("StrfVersionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Git.
        /// </summary>
        internal static string StrGit {
            get {
                return ResourceManager.GetString("StrGit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Git Version Check.
        /// </summary>
        internal static string StrGitVersionCheck {
            get {
                return ResourceManager.GetString("StrGitVersionCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Go Up One Level.
        /// </summary>
        internal static string StrGoUpOneLevel {
            get {
                return ResourceManager.GetString("StrGoUpOneLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Graph.
        /// </summary>
        internal static string StrGraph {
            get {
                return ResourceManager.GetString("StrGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hard.
        /// </summary>
        internal static string StrHard {
            get {
                return ResourceManager.GetString("StrHard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hard Reset.
        /// </summary>
        internal static string StrHardReset {
            get {
                return ResourceManager.GetString("StrHardReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hash.
        /// </summary>
        internal static string StrHash {
            get {
                return ResourceManager.GetString("StrHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Head.
        /// </summary>
        internal static string StrHead {
            get {
                return ResourceManager.GetString("StrHead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Heads.
        /// </summary>
        internal static string StrHeads {
            get {
                return ResourceManager.GetString("StrHeads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hide Details.
        /// </summary>
        internal static string StrHideDetails {
            get {
                return ResourceManager.GetString("StrHideDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на History.
        /// </summary>
        internal static string StrHistory {
            get {
                return ResourceManager.GetString("StrHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на History Diff.
        /// </summary>
        internal static string StrHistoryDiff {
            get {
                return ResourceManager.GetString("StrHistoryDiff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Horizontal Split.
        /// </summary>
        internal static string StrHorizontalSplit {
            get {
                return ResourceManager.GetString("StrHorizontalSplit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Housekeeping.
        /// </summary>
        internal static string StrHousekeeping {
            get {
                return ResourceManager.GetString("StrHousekeeping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ignored.
        /// </summary>
        internal static string StrIgnored {
            get {
                return ResourceManager.GetString("StrIgnored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ignore Whitespaces.
        /// </summary>
        internal static string StrIgnoreWhitespaces {
            get {
                return ResourceManager.GetString("StrIgnoreWhitespaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Include ignored.
        /// </summary>
        internal static string StrIncludeIgnored {
            get {
                return ResourceManager.GetString("StrIncludeIgnored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Include untracked.
        /// </summary>
        internal static string StrIncludeUntracked {
            get {
                return ResourceManager.GetString("StrIncludeUntracked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Index.
        /// </summary>
        internal static string StrIndex {
            get {
                return ResourceManager.GetString("StrIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Init.
        /// </summary>
        internal static string StrInit {
            get {
                return ResourceManager.GetString("StrInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Init Repository.
        /// </summary>
        internal static string StrInitRepository {
            get {
                return ResourceManager.GetString("StrInitRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Installed git Version.
        /// </summary>
        internal static string StrInstalledVersion {
            get {
                return ResourceManager.GetString("StrInstalledVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Integration.
        /// </summary>
        internal static string StrIntegration {
            get {
                return ResourceManager.GetString("StrIntegration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ISO 8601.
        /// </summary>
        internal static string StrISO8601 {
            get {
                return ResourceManager.GetString("StrISO8601", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Keep.
        /// </summary>
        internal static string StrKeep {
            get {
                return ResourceManager.GetString("StrKeep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Keep File.
        /// </summary>
        internal static string StrKeepFile {
            get {
                return ResourceManager.GetString("StrKeepFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Keep index.
        /// </summary>
        internal static string StrKeepIndex {
            get {
                return ResourceManager.GetString("StrKeepIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на added.
        /// </summary>
        internal static string StrlAdded {
            get {
                return ResourceManager.GetString("StrlAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Latest Version.
        /// </summary>
        internal static string StrLatestVersion {
            get {
                return ResourceManager.GetString("StrLatestVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на bash.
        /// </summary>
        internal static string StrlBash {
            get {
                return ResourceManager.GetString("StrlBash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на binary.
        /// </summary>
        internal static string StrlBinary {
            get {
                return ResourceManager.GetString("StrlBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на blame.
        /// </summary>
        internal static string StrlBlame {
            get {
                return ResourceManager.GetString("StrlBlame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на change.
        /// </summary>
        internal static string StrlChange {
            get {
                return ResourceManager.GetString("StrlChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на changes.
        /// </summary>
        internal static string StrlChanges {
            get {
                return ResourceManager.GetString("StrlChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на chmod.
        /// </summary>
        internal static string StrlChmod {
            get {
                return ResourceManager.GetString("StrlChmod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на cmd.
        /// </summary>
        internal static string StrlCmd {
            get {
                return ResourceManager.GetString("StrlCmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на commits.
        /// </summary>
        internal static string StrlCommits {
            get {
                return ResourceManager.GetString("StrlCommits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на configure.
        /// </summary>
        internal static string StrlConfigure {
            get {
                return ResourceManager.GetString("StrlConfigure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на copied.
        /// </summary>
        internal static string StrlCopied {
            get {
                return ResourceManager.GetString("StrlCopied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на copy.
        /// </summary>
        internal static string StrlCopy {
            get {
                return ResourceManager.GetString("StrlCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на deleted.
        /// </summary>
        internal static string StrlDeleted {
            get {
                return ResourceManager.GetString("StrlDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do not track.
        /// </summary>
        internal static string StrlDoNotTrack {
            get {
                return ResourceManager.GetString("StrlDoNotTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на download.
        /// </summary>
        internal static string StrlDownload {
            get {
                return ResourceManager.GetString("StrlDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Less Context.
        /// </summary>
        internal static string StrLessContext {
            get {
                return ResourceManager.GetString("StrLessContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на gitk.
        /// </summary>
        internal static string StrlGitk {
            get {
                return ResourceManager.GetString("StrlGitk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на go to download page.
        /// </summary>
        internal static string StrlGoToDownloadPage {
            get {
                return ResourceManager.GetString("StrlGoToDownloadPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на gui.
        /// </summary>
        internal static string StrlGui {
            get {
                return ResourceManager.GetString("StrlGui", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Lines of Context.
        /// </summary>
        internal static string StrLinesOfContext {
            get {
                return ResourceManager.GetString("StrLinesOfContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Make orphan branch.
        /// </summary>
        internal static string StrlMakeOrphanBranch {
            get {
                return ResourceManager.GetString("StrlMakeOrphanBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на modified.
        /// </summary>
        internal static string StrlModified {
            get {
                return ResourceManager.GetString("StrlModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на none.
        /// </summary>
        internal static string StrlNone {
            get {
                return ResourceManager.GetString("StrlNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на no path specified.
        /// </summary>
        internal static string StrlNoPathSpecified {
            get {
                return ResourceManager.GetString("StrlNoPathSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на no subdirectories.
        /// </summary>
        internal static string StrlNoSubdirectories {
            get {
                return ResourceManager.GetString("StrlNoSubdirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на not installed.
        /// </summary>
        internal static string StrlNotInstalled {
            get {
                return ResourceManager.GetString("StrlNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Local Branches.
        /// </summary>
        internal static string StrLocalBranches {
            get {
                return ResourceManager.GetString("StrLocalBranches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на refresh.
        /// </summary>
        internal static string StrlRefresh {
            get {
                return ResourceManager.GetString("StrlRefresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на removed.
        /// </summary>
        internal static string StrlRemoved {
            get {
                return ResourceManager.GetString("StrlRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на rename.
        /// </summary>
        internal static string StrlRename {
            get {
                return ResourceManager.GetString("StrlRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на renamed.
        /// </summary>
        internal static string StrlRenamed {
            get {
                return ResourceManager.GetString("StrlRenamed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на required git version {0}.
        /// </summary>
        internal static string StrlRequiredVersionIs {
            get {
                return ResourceManager.GetString("StrlRequiredVersionIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на restart required.
        /// </summary>
        internal static string StrlRestartRequired {
            get {
                return ResourceManager.GetString("StrlRestartRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tag type.
        /// </summary>
        internal static string StrlTagType {
            get {
                return ResourceManager.GetString("StrlTagType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All branches.
        /// </summary>
        internal static string StrlTrackAllBranches {
            get {
                return ResourceManager.GetString("StrlTrackAllBranches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specified branches.
        /// </summary>
        internal static string StrlTrackSpecifiedBranches {
            get {
                return ResourceManager.GetString("StrlTrackSpecifiedBranches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на unavailable.
        /// </summary>
        internal static string StrlUnavailable {
            get {
                return ResourceManager.GetString("StrlUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на unlimited.
        /// </summary>
        internal static string StrlUnlimited {
            get {
                return ResourceManager.GetString("StrlUnlimited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на unmerged.
        /// </summary>
        internal static string StrlUnmerged {
            get {
                return ResourceManager.GetString("StrlUnmerged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на unresolved conflicts.
        /// </summary>
        internal static string StrlUnmergedFilesPresent {
            get {
                return ResourceManager.GetString("StrlUnmergedFilesPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на unstaged removed files.
        /// </summary>
        internal static string StrlUnstagedRemovedFiles {
            get {
                return ResourceManager.GetString("StrlUnstagedRemovedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на untracked files.
        /// </summary>
        internal static string StrlUnstagedUntrackedFiles {
            get {
                return ResourceManager.GetString("StrlUnstagedUntrackedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на update.
        /// </summary>
        internal static string StrlUpdate {
            get {
                return ResourceManager.GetString("StrlUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на user identity is not configured.
        /// </summary>
        internal static string StrlUserIdentityNotConfigured {
            get {
                return ResourceManager.GetString("StrlUserIdentityNotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mainline Parent Commit.
        /// </summary>
        internal static string StrMainlineParentCommit {
            get {
                return ResourceManager.GetString("StrMainlineParentCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Maintenance.
        /// </summary>
        internal static string StrMaintenance {
            get {
                return ResourceManager.GetString("StrMaintenance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Manage.
        /// </summary>
        internal static string StrManage {
            get {
                return ResourceManager.GetString("StrManage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Manage Remotes.
        /// </summary>
        internal static string StrManageRemotes {
            get {
                return ResourceManager.GetString("StrManageRemotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Manage Submodules.
        /// </summary>
        internal static string StrManageSubmodules {
            get {
                return ResourceManager.GetString("StrManageSubmodules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Manual.
        /// </summary>
        internal static string StrManual {
            get {
                return ResourceManager.GetString("StrManual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Manual Stage.
        /// </summary>
        internal static string StrManualStage {
            get {
                return ResourceManager.GetString("StrManualStage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mark as Resolved.
        /// </summary>
        internal static string StrMarkAsResolved {
            get {
                return ResourceManager.GetString("StrMarkAsResolved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Match Case.
        /// </summary>
        internal static string StrMatchCase {
            get {
                return ResourceManager.GetString("StrMatchCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Merge.
        /// </summary>
        internal static string StrMerge {
            get {
                return ResourceManager.GetString("StrMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Merge Branches.
        /// </summary>
        internal static string StrMergeBranches {
            get {
                return ResourceManager.GetString("StrMergeBranches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Merge Multiple Branches.
        /// </summary>
        internal static string StrMergeMultipleBranches {
            get {
                return ResourceManager.GetString("StrMergeMultipleBranches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Merge Tool.
        /// </summary>
        internal static string StrMergeTool {
            get {
                return ResourceManager.GetString("StrMergeTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Merge with.
        /// </summary>
        internal static string StrMergeWith {
            get {
                return ResourceManager.GetString("StrMergeWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Message.
        /// </summary>
        internal static string StrMessage {
            get {
                return ResourceManager.GetString("StrMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mirror.
        /// </summary>
        internal static string StrMirror {
            get {
                return ResourceManager.GetString("StrMirror", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mixed.
        /// </summary>
        internal static string StrMixed {
            get {
                return ResourceManager.GetString("StrMixed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Modified.
        /// </summary>
        internal static string StrModified {
            get {
                return ResourceManager.GetString("StrModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Modified Files.
        /// </summary>
        internal static string StrModifiedFiles {
            get {
                return ResourceManager.GetString("StrModifiedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на More Context.
        /// </summary>
        internal static string StrMoreContext {
            get {
                return ResourceManager.GetString("StrMoreContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Moved.
        /// </summary>
        internal static string StrMoved {
            get {
                return ResourceManager.GetString("StrMoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name.
        /// </summary>
        internal static string StrName {
            get {
                return ResourceManager.GetString("StrName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New.
        /// </summary>
        internal static string StrNew {
            get {
                return ResourceManager.GetString("StrNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New name.
        /// </summary>
        internal static string StrNewName {
            get {
                return ResourceManager.GetString("StrNewName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Next.
        /// </summary>
        internal static string StrNext {
            get {
                return ResourceManager.GetString("StrNext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на (no branch).
        /// </summary>
        internal static string StrNoBranch {
            get {
                return ResourceManager.GetString("StrNoBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No branches to merge with.
        /// </summary>
        internal static string StrNoBranchesToMergeWith {
            get {
                return ResourceManager.GetString("StrNoBranchesToMergeWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No changed files.
        /// </summary>
        internal static string StrNoChangedFiles {
            get {
                return ResourceManager.GetString("StrNoChangedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на None.
        /// </summary>
        internal static string StrNone {
            get {
                return ResourceManager.GetString("StrNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Normal.
        /// </summary>
        internal static string StrNormal {
            get {
                return ResourceManager.GetString("StrNormal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Note.
        /// </summary>
        internal static string StrNote {
            get {
                return ResourceManager.GetString("StrNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open.
        /// </summary>
        internal static string StrOpen {
            get {
                return ResourceManager.GetString("StrOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open Command Line.
        /// </summary>
        internal static string StrOpenCommandLine {
            get {
                return ResourceManager.GetString("StrOpenCommandLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open Containing Folder.
        /// </summary>
        internal static string StrOpenContainingFolder {
            get {
                return ResourceManager.GetString("StrOpenContainingFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open in Windows Explorer.
        /// </summary>
        internal static string StrOpenInWindowsExplorer {
            get {
                return ResourceManager.GetString("StrOpenInWindowsExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open With.
        /// </summary>
        internal static string StrOpenWith {
            get {
                return ResourceManager.GetString("StrOpenWith", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open with gitter.
        /// </summary>
        internal static string StrOpenWithGitter {
            get {
                return ResourceManager.GetString("StrOpenWithGitter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Optimizing repository.
        /// </summary>
        internal static string StrOptimizingRepository {
            get {
                return ResourceManager.GetString("StrOptimizingRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Message (optional).
        /// </summary>
        internal static string StrOptionalMessage {
            get {
                return ResourceManager.GetString("StrOptionalMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Options.
        /// </summary>
        internal static string StrOptions {
            get {
                return ResourceManager.GetString("StrOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Orphan.
        /// </summary>
        internal static string StrOrphan {
            get {
                return ResourceManager.GetString("StrOrphan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Parameter.
        /// </summary>
        internal static string StrParameter {
            get {
                return ResourceManager.GetString("StrParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Parent.
        /// </summary>
        internal static string StrParent {
            get {
                return ResourceManager.GetString("StrParent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Parents.
        /// </summary>
        internal static string StrParents {
            get {
                return ResourceManager.GetString("StrParents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Patch.
        /// </summary>
        internal static string StrPatch {
            get {
                return ResourceManager.GetString("StrPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Patches.
        /// </summary>
        internal static string StrPatches {
            get {
                return ResourceManager.GetString("StrPatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path.
        /// </summary>
        internal static string StrPath {
            get {
                return ResourceManager.GetString("StrPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path to git.exe.
        /// </summary>
        internal static string StrPathToGitExe {
            get {
                return ResourceManager.GetString("StrPathToGitExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pattern.
        /// </summary>
        internal static string StrPattern {
            get {
                return ResourceManager.GetString("StrPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Applying stashed changes.
        /// </summary>
        internal static string StrPerformingStashApply {
            get {
                return ResourceManager.GetString("StrPerformingStashApply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Removing stashed changes.
        /// </summary>
        internal static string StrPerformingStashDrop {
            get {
                return ResourceManager.GetString("StrPerformingStashDrop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Applying stashed changes.
        /// </summary>
        internal static string StrPerformingStashPop {
            get {
                return ResourceManager.GetString("StrPerformingStashPop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stashing working directory changes.
        /// </summary>
        internal static string StrPerformingStashSave {
            get {
                return ResourceManager.GetString("StrPerformingStashSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pop.
        /// </summary>
        internal static string StrPop {
            get {
                return ResourceManager.GetString("StrPop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Position.
        /// </summary>
        internal static string StrPosition {
            get {
                return ResourceManager.GetString("StrPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Previous.
        /// </summary>
        internal static string StrPrevious {
            get {
                return ResourceManager.GetString("StrPrevious", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Proceed.
        /// </summary>
        internal static string StrProceed {
            get {
                return ResourceManager.GetString("StrProceed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Properties.
        /// </summary>
        internal static string StrProperties {
            get {
                return ResourceManager.GetString("StrProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Proxy.
        /// </summary>
        internal static string StrProxy {
            get {
                return ResourceManager.GetString("StrProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Prune.
        /// </summary>
        internal static string StrPrune {
            get {
                return ResourceManager.GetString("StrPrune", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Prune.
        /// </summary>
        internal static string StrPruneRemote {
            get {
                return ResourceManager.GetString("StrPruneRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pull.
        /// </summary>
        internal static string StrPull {
            get {
                return ResourceManager.GetString("StrPull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Push.
        /// </summary>
        internal static string StrPush {
            get {
                return ResourceManager.GetString("StrPush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Push to.
        /// </summary>
        internal static string StrPushTo {
            get {
                return ResourceManager.GetString("StrPushTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Push URL.
        /// </summary>
        internal static string StrPushUrl {
            get {
                return ResourceManager.GetString("StrPushUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rebase.
        /// </summary>
        internal static string StrRebase {
            get {
                return ResourceManager.GetString("StrRebase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rebase &apos;{0}&apos; Here.
        /// </summary>
        internal static string StrRebaseBranchHere {
            get {
                return ResourceManager.GetString("StrRebaseBranchHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rebase Here.
        /// </summary>
        internal static string StrRebaseHere {
            get {
                return ResourceManager.GetString("StrRebaseHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Recursive.
        /// </summary>
        internal static string StrRecursive {
            get {
                return ResourceManager.GetString("StrRecursive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reference.
        /// </summary>
        internal static string StrReference {
            get {
                return ResourceManager.GetString("StrReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на References.
        /// </summary>
        internal static string StrReferences {
            get {
                return ResourceManager.GetString("StrReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reflog.
        /// </summary>
        internal static string StrReflog {
            get {
                return ResourceManager.GetString("StrReflog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refresh.
        /// </summary>
        internal static string StrRefresh {
            get {
                return ResourceManager.GetString("StrRefresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refreshing branches.
        /// </summary>
        internal static string StrRefreshingBranches {
            get {
                return ResourceManager.GetString("StrRefreshingBranches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refreshing references.
        /// </summary>
        internal static string StrRefreshingReferences {
            get {
                return ResourceManager.GetString("StrRefreshingReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refreshing tags.
        /// </summary>
        internal static string StrRefreshingTags {
            get {
                return ResourceManager.GetString("StrRefreshingTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refs.
        /// </summary>
        internal static string StrRefs {
            get {
                return ResourceManager.GetString("StrRefs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Refspec.
        /// </summary>
        internal static string StrRefspec {
            get {
                return ResourceManager.GetString("StrRefspec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Relative.
        /// </summary>
        internal static string StrRelative {
            get {
                return ResourceManager.GetString("StrRelative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Relative Path.
        /// </summary>
        internal static string StrRelativePath {
            get {
                return ResourceManager.GetString("StrRelativePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remote.
        /// </summary>
        internal static string StrRemote {
            get {
                return ResourceManager.GetString("StrRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remote Branches.
        /// </summary>
        internal static string StrRemoteBranches {
            get {
                return ResourceManager.GetString("StrRemoteBranches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remote References.
        /// </summary>
        internal static string StrRemoteReferences {
            get {
                return ResourceManager.GetString("StrRemoteReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remotes.
        /// </summary>
        internal static string StrRemotes {
            get {
                return ResourceManager.GetString("StrRemotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove.
        /// </summary>
        internal static string StrRemove {
            get {
                return ResourceManager.GetString("StrRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete Branch.
        /// </summary>
        internal static string StrRemoveBranch {
            get {
                return ResourceManager.GetString("StrRemoveBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Removed.
        /// </summary>
        internal static string StrRemoved {
            get {
                return ResourceManager.GetString("StrRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Removed Files.
        /// </summary>
        internal static string StrRemovedFiles {
            get {
                return ResourceManager.GetString("StrRemovedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove &apos;{0}&apos;.
        /// </summary>
        internal static string StrRemoveObject {
            get {
                return ResourceManager.GetString("StrRemoveObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove Remote.
        /// </summary>
        internal static string StrRemoveRemote {
            get {
                return ResourceManager.GetString("StrRemoveRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove Remote Reference.
        /// </summary>
        internal static string StrRemoveRemoteReference {
            get {
                return ResourceManager.GetString("StrRemoveRemoteReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete Tag.
        /// </summary>
        internal static string StrRemoveTag {
            get {
                return ResourceManager.GetString("StrRemoveTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Removing stashed changes.
        /// </summary>
        internal static string StrRemovingStashedChanges {
            get {
                return ResourceManager.GetString("StrRemovingStashedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rename.
        /// </summary>
        internal static string StrRename {
            get {
                return ResourceManager.GetString("StrRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rename Branch.
        /// </summary>
        internal static string StrRenameBranch {
            get {
                return ResourceManager.GetString("StrRenameBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Renamed.
        /// </summary>
        internal static string StrRenamed {
            get {
                return ResourceManager.GetString("StrRenamed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rename Remote.
        /// </summary>
        internal static string StrRenameRemote {
            get {
                return ResourceManager.GetString("StrRenameRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Required git Version.
        /// </summary>
        internal static string StrRequiredVersion {
            get {
                return ResourceManager.GetString("StrRequiredVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reset.
        /// </summary>
        internal static string StrReset {
            get {
                return ResourceManager.GetString("StrReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reset &apos;{0}&apos; Here.
        /// </summary>
        internal static string StrResetBranchHere {
            get {
                return ResourceManager.GetString("StrResetBranchHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reset Here.
        /// </summary>
        internal static string StrResetHere {
            get {
                return ResourceManager.GetString("StrResetHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Resolve Conflict.
        /// </summary>
        internal static string StrResolveConflict {
            get {
                return ResourceManager.GetString("StrResolveConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Resolve Conflicts.
        /// </summary>
        internal static string StrResolveConflicts {
            get {
                return ResourceManager.GetString("StrResolveConflicts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reverse.
        /// </summary>
        internal static string StrReverse {
            get {
                return ResourceManager.GetString("StrReverse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Revert.
        /// </summary>
        internal static string StrRevert {
            get {
                return ResourceManager.GetString("StrRevert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Revert Commit.
        /// </summary>
        internal static string StrRevertCommit {
            get {
                return ResourceManager.GetString("StrRevertCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Revision.
        /// </summary>
        internal static string StrRevision {
            get {
                return ResourceManager.GetString("StrRevision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Revision Graph.
        /// </summary>
        internal static string StrRevisionGraph {
            get {
                return ResourceManager.GetString("StrRevisionGraph", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Revisions.
        /// </summary>
        internal static string StrRevisions {
            get {
                return ResourceManager.GetString("StrRevisions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на RFC2822.
        /// </summary>
        internal static string StrRFC2822 {
            get {
                return ResourceManager.GetString("StrRFC2822", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Right-aligned Details.
        /// </summary>
        internal static string StrRightAlignedDetails {
            get {
                return ResourceManager.GetString("StrRightAlignedDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Run.
        /// </summary>
        internal static string StrRun {
            get {
                return ResourceManager.GetString("StrRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Run Merge Tool.
        /// </summary>
        internal static string StrRunMergeTool {
            get {
                return ResourceManager.GetString("StrRunMergeTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Merge tool is running.
        /// </summary>
        internal static string StrRunningMergeTool {
            get {
                return ResourceManager.GetString("StrRunningMergeTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Aborting rebase.
        /// </summary>
        internal static string StrsAbortingRebase {
            get {
                return ResourceManager.GetString("StrsAbortingRebase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Also remove directories.
        /// </summary>
        internal static string StrsAlsoRemoveDirectories {
            get {
                return ResourceManager.GetString("StrsAlsoRemoveDirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Always autodetect.
        /// </summary>
        internal static string StrsAlwaysAutodetect {
            get {
                return ResourceManager.GetString("StrsAlwaysAutodetect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Append repository name from URL to path.
        /// </summary>
        internal static string StrsAppendRepositoryNameFromURL {
            get {
                return ResourceManager.GetString("StrsAppendRepositoryNameFromURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save.
        /// </summary>
        internal static string StrSave {
            get {
                return ResourceManager.GetString("StrSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save As.
        /// </summary>
        internal static string StrSaveAs {
            get {
                return ResourceManager.GetString("StrSaveAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save Patch.
        /// </summary>
        internal static string StrSavePatch {
            get {
                return ResourceManager.GetString("StrSavePatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You have unstaged changes to file &apos;{0}&apos;.
        ///If you continue, these changes will be lost.
        ///Proceed?.
        /// </summary>
        internal static string StrsCheckoutPathWarning {
            get {
                return ResourceManager.GetString("StrsCheckoutPathWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cherry-pick is in process.
        /// </summary>
        internal static string StrsCherryPickIsInProcess {
            get {
                return ResourceManager.GetString("StrsCherryPickIsInProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Commit limit.
        /// </summary>
        internal static string StrsCommitLimit {
            get {
                return ResourceManager.GetString("StrsCommitLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Continuing rebase.
        /// </summary>
        internal static string StrsContinuingRebase {
            get {
                return ResourceManager.GetString("StrsContinuingRebase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Default behavior.
        /// </summary>
        internal static string StrsDefaultBehavior {
            get {
                return ResourceManager.GetString("StrsDefaultBehavior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete file.
        /// </summary>
        internal static string StrsDeleteFile {
            get {
                return ResourceManager.GetString("StrsDeleteFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Search.
        /// </summary>
        internal static string StrSearch {
            get {
                return ResourceManager.GetString("StrSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select.
        /// </summary>
        internal static string StrSelect {
            get {
                return ResourceManager.GetString("StrSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select repository path.
        /// </summary>
        internal static string StrSelectRepositoryPath {
            get {
                return ResourceManager.GetString("StrSelectRepositoryPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select template directory.
        /// </summary>
        internal static string StrSelectTemplateDirectory {
            get {
                return ResourceManager.GetString("StrSelectTemplateDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Send Email.
        /// </summary>
        internal static string StrSendEmail {
            get {
                return ResourceManager.GetString("StrSendEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sending data to &apos;{0}&apos;.
        /// </summary>
        internal static string StrSendingDataTo {
            get {
                return ResourceManager.GetString("StrSendingDataTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Send tags.
        /// </summary>
        internal static string StrSendTags {
            get {
                return ResourceManager.GetString("StrSendTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Everything is up to date.
        /// </summary>
        internal static string StrsEverythingIsUpToDate {
            get {
                return ResourceManager.GetString("StrsEverythingIsUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exclude pattern.
        /// </summary>
        internal static string StrsExcludePattern {
            get {
                return ResourceManager.GetString("StrsExcludePattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fetch all.
        /// </summary>
        internal static string StrsFetchAll {
            get {
                return ResourceManager.GetString("StrsFetchAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fetching tree.
        /// </summary>
        internal static string StrsFetchingTree {
            get {
                return ResourceManager.GetString("StrsFetchingTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fetch none.
        /// </summary>
        internal static string StrsFetchNone {
            get {
                return ResourceManager.GetString("StrsFetchNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fetch remote.
        /// </summary>
        internal static string StrsFetchRemote {
            get {
                return ResourceManager.GetString("StrsFetchRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fetch tags.
        /// </summary>
        internal static string StrsFetchTags {
            get {
                return ResourceManager.GetString("StrsFetchTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на For current repository only.
        /// </summary>
        internal static string StrsForCurrentRepositoryOnly {
            get {
                return ResourceManager.GetString("StrsForCurrentRepositoryOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на For current Windows user.
        /// </summary>
        internal static string StrsForCurrentWindowsUser {
            get {
                return ResourceManager.GetString("StrsForCurrentWindowsUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SHA.
        /// </summary>
        internal static string StrSHA {
            get {
                return ResourceManager.GetString("StrSHA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show All.
        /// </summary>
        internal static string StrShowAll {
            get {
                return ResourceManager.GetString("StrShowAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show Colors.
        /// </summary>
        internal static string StrShowColors {
            get {
                return ResourceManager.GetString("StrShowColors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show Commit Details.
        /// </summary>
        internal static string StrShowCommitDetails {
            get {
                return ResourceManager.GetString("StrShowCommitDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show Directory Tree.
        /// </summary>
        internal static string StrShowDirectoryTree {
            get {
                return ResourceManager.GetString("StrShowDirectoryTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show Email.
        /// </summary>
        internal static string StrShowEmail {
            get {
                return ResourceManager.GetString("StrShowEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show Local Branches.
        /// </summary>
        internal static string StrShowLocalBranches {
            get {
                return ResourceManager.GetString("StrShowLocalBranches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show Remote Branches.
        /// </summary>
        internal static string StrShowRemoteBranches {
            get {
                return ResourceManager.GetString("StrShowRemoteBranches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show Stash.
        /// </summary>
        internal static string StrShowStash {
            get {
                return ResourceManager.GetString("StrShowStash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show Tags.
        /// </summary>
        internal static string StrShowTags {
            get {
                return ResourceManager.GetString("StrShowTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Signed.
        /// </summary>
        internal static string StrSigned {
            get {
                return ResourceManager.GetString("StrSigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Signing.
        /// </summary>
        internal static string StrSigning {
            get {
                return ResourceManager.GetString("StrSigning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ignore whitespace.
        /// </summary>
        internal static string StrsIgnoreWhitespace {
            get {
                return ResourceManager.GetString("StrsIgnoreWhitespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Lightweight.
        /// </summary>
        internal static string StrSimpleTag {
            get {
                return ResourceManager.GetString("StrSimpleTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import tags.
        /// </summary>
        internal static string StrsImportTags {
            get {
                return ResourceManager.GetString("StrsImportTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Include pattern.
        /// </summary>
        internal static string StrsIncludePattern {
            get {
                return ResourceManager.GetString("StrsIncludePattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Include untracked files.
        /// </summary>
        internal static string StrsIncludeUntrackedFiles {
            get {
                return ResourceManager.GetString("StrsIncludeUntrackedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Index and working directory.
        /// </summary>
        internal static string StrsIndexAndWorkingDirectory {
            get {
                return ResourceManager.GetString("StrsIndexAndWorkingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Size.
        /// </summary>
        internal static string StrSize {
            get {
                return ResourceManager.GetString("StrSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Keep modified file.
        /// </summary>
        internal static string StrsKeepModifiedFile {
            get {
                return ResourceManager.GetString("StrsKeepModifiedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Skip.
        /// </summary>
        internal static string StrSkip {
            get {
                return ResourceManager.GetString("StrSkip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Skip fetch all.
        /// </summary>
        internal static string StrSkipFetchAll {
            get {
                return ResourceManager.GetString("StrSkipFetchAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Merge is in process.
        /// </summary>
        internal static string StrsMergeIsInProcess {
            get {
                return ResourceManager.GetString("StrsMergeIsInProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No checkout.
        /// </summary>
        internal static string StrsNoCheckout {
            get {
                return ResourceManager.GetString("StrsNoCheckout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No commit.
        /// </summary>
        internal static string StrsNoCommit {
            get {
                return ResourceManager.GetString("StrsNoCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No commits to display.
        /// </summary>
        internal static string StrsNoCommitsToDisplay {
            get {
                return ResourceManager.GetString("StrsNoCommitsToDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No contributors to display.
        /// </summary>
        internal static string StrsNoContributorsToDisplay {
            get {
                return ResourceManager.GetString("StrsNoContributorsToDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No fast-forward.
        /// </summary>
        internal static string StrsNoFastForward {
            get {
                return ResourceManager.GetString("StrsNoFastForward", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No files to remove.
        /// </summary>
        internal static string StrsNoFilesToRemove {
            get {
                return ResourceManager.GetString("StrsNoFilesToRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No local branches.
        /// </summary>
        internal static string StrsNoLocalBranches {
            get {
                return ResourceManager.GetString("StrsNoLocalBranches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No patches to apply.
        /// </summary>
        internal static string StrsNoPatchesToApply {
            get {
                return ResourceManager.GetString("StrsNoPatchesToApply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No remotes.
        /// </summary>
        internal static string StrsNoRemotes {
            get {
                return ResourceManager.GetString("StrsNoRemotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No staged changes.
        /// </summary>
        internal static string StrsNoStagedChanges {
            get {
                return ResourceManager.GetString("StrsNoStagedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No submodules.
        /// </summary>
        internal static string StrsNoSubmodules {
            get {
                return ResourceManager.GetString("StrsNoSubmodules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Nothing stashed.
        /// </summary>
        internal static string StrsNothingStashed {
            get {
                return ResourceManager.GetString("StrsNothingStashed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No unstaged changes.
        /// </summary>
        internal static string StrsNoUnstagedChanges {
            get {
                return ResourceManager.GetString("StrsNoUnstagedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Objects that will be removed.
        /// </summary>
        internal static string StrsObjectsThatWillBeRemoved {
            get {
                return ResourceManager.GetString("StrsObjectsThatWillBeRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Soft.
        /// </summary>
        internal static string StrSoft {
            get {
                return ResourceManager.GetString("StrSoft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Source File Name.
        /// </summary>
        internal static string StrSourceFileName {
            get {
                return ResourceManager.GetString("StrSourceFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Squash.
        /// </summary>
        internal static string StrSquash {
            get {
                return ResourceManager.GetString("StrSquash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rebase is in process.
        /// </summary>
        internal static string StrsRebaseIsInProcess {
            get {
                return ResourceManager.GetString("StrsRebaseIsInProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Receive pack.
        /// </summary>
        internal static string StrsReceivePack {
            get {
                return ResourceManager.GetString("StrsReceivePack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remote name.
        /// </summary>
        internal static string StrsRemoteName {
            get {
                return ResourceManager.GetString("StrsRemoteName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove branch &apos;{0}&apos; from.
        /// </summary>
        internal static string StrsRemoveBranchFrom {
            get {
                return ResourceManager.GetString("StrsRemoveBranchFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Local and remote repository.
        /// </summary>
        internal static string StrsRemoveFromRemote {
            get {
                return ResourceManager.GetString("StrsRemoveFromRemote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove branch from &apos;{0}&apos; and local repository (this is a potentially dangerous operation).
        /// </summary>
        internal static string StrsRemoveFromRemoteDescription {
            get {
                return ResourceManager.GetString("StrsRemoveFromRemoteDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Local repository only.
        /// </summary>
        internal static string StrsRemoveLocalOnly {
            get {
                return ResourceManager.GetString("StrsRemoveLocalOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove tracking branch from local repository without touching real branch  on remote repository.
        /// </summary>
        internal static string StrsRemoveLocalOnlyDescription {
            get {
                return ResourceManager.GetString("StrsRemoveLocalOnlyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Removing stashed changes.
        /// </summary>
        internal static string StrsRemovingStashedChanges {
            get {
                return ResourceManager.GetString("StrsRemovingStashedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Repository access method.
        /// </summary>
        internal static string StrsRepositoryAccessMethod {
            get {
                return ResourceManager.GetString("StrsRepositoryAccessMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Revert is in process.
        /// </summary>
        internal static string StrsRevertIsInProcess {
            get {
                return ResourceManager.GetString("StrsRevertIsInProcess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на searching.
        /// </summary>
        internal static string StrsSearching {
            get {
                return ResourceManager.GetString("StrsSearching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Searching for stale branches.
        /// </summary>
        internal static string StrsSearchingStaleBranches {
            get {
                return ResourceManager.GetString("StrsSearchingStaleBranches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Shallow clone.
        /// </summary>
        internal static string StrsShallowClone {
            get {
                return ResourceManager.GetString("StrsShallowClone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Skipping commit.
        /// </summary>
        internal static string StrsSkippingCommit {
            get {
                return ResourceManager.GetString("StrsSkippingCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specify manually.
        /// </summary>
        internal static string StrsSpecifyManually {
            get {
                return ResourceManager.GetString("StrsSpecifyManually", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Staged changes.
        /// </summary>
        internal static string StrsStagedChanges {
            get {
                return ResourceManager.GetString("StrsStagedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stage.
        /// </summary>
        internal static string StrStage {
            get {
                return ResourceManager.GetString("StrStage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stage All.
        /// </summary>
        internal static string StrStageAll {
            get {
                return ResourceManager.GetString("StrStageAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Staged Changes.
        /// </summary>
        internal static string StrStagedChanges {
            get {
                return ResourceManager.GetString("StrStagedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stage Files.
        /// </summary>
        internal static string StrStageFiles {
            get {
                return ResourceManager.GetString("StrStageFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stage Selection.
        /// </summary>
        internal static string StrStageSelection {
            get {
                return ResourceManager.GetString("StrStageSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tag fetch mode.
        /// </summary>
        internal static string StrsTagFetchMode {
            get {
                return ResourceManager.GetString("StrsTagFetchMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tag import mode.
        /// </summary>
        internal static string StrsTagImportMode {
            get {
                return ResourceManager.GetString("StrsTagImportMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Starting revision.
        /// </summary>
        internal static string StrStartingRevision {
            get {
                return ResourceManager.GetString("StrStartingRevision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stash.
        /// </summary>
        internal static string StrStash {
            get {
                return ResourceManager.GetString("StrStash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stash Apply.
        /// </summary>
        internal static string StrStashApply {
            get {
                return ResourceManager.GetString("StrStashApply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stash Clear.
        /// </summary>
        internal static string StrStashClear {
            get {
                return ResourceManager.GetString("StrStashClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stash Drop.
        /// </summary>
        internal static string StrStashDrop {
            get {
                return ResourceManager.GetString("StrStashDrop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stash Pop.
        /// </summary>
        internal static string StrStashPop {
            get {
                return ResourceManager.GetString("StrStashPop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stash Save.
        /// </summary>
        internal static string StrStashSave {
            get {
                return ResourceManager.GetString("StrStashSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stash to Branch.
        /// </summary>
        internal static string StrStashToBranch {
            get {
                return ResourceManager.GetString("StrStashToBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Status.
        /// </summary>
        internal static string StrStatus {
            get {
                return ResourceManager.GetString("StrStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tracking mode.
        /// </summary>
        internal static string StrsTrackingMode {
            get {
                return ResourceManager.GetString("StrsTrackingMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Subject.
        /// </summary>
        internal static string StrSubject {
            get {
                return ResourceManager.GetString("StrSubject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Submodules.
        /// </summary>
        internal static string StrSubmodules {
            get {
                return ResourceManager.GetString("StrSubmodules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Summary.
        /// </summary>
        internal static string StrSummary {
            get {
                return ResourceManager.GetString("StrSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на unknown.
        /// </summary>
        internal static string StrsUnknown {
            get {
                return ResourceManager.GetString("StrsUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unstaged changes.
        /// </summary>
        internal static string StrsUnstagedChanges {
            get {
                return ResourceManager.GetString("StrsUnstagedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Updated references.
        /// </summary>
        internal static string StrsUpdatedReferences {
            get {
                return ResourceManager.GetString("StrsUpdatedReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Upload pack.
        /// </summary>
        internal static string StrsUploadPack {
            get {
                return ResourceManager.GetString("StrsUploadPack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use ours version.
        /// </summary>
        internal static string StrsUseOursVersion {
            get {
                return ResourceManager.GetString("StrsUseOursVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use patience diff algorithm.
        /// </summary>
        internal static string StrsUsePatienceDiffAlgorithm {
            get {
                return ResourceManager.GetString("StrsUsePatienceDiffAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use theirs version.
        /// </summary>
        internal static string StrsUseTheirsVersion {
            get {
                return ResourceManager.GetString("StrsUseTheirsVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use this user name and email.
        /// </summary>
        internal static string StrsUseThisUserNameAndEmail {
            get {
                return ResourceManager.GetString("StrsUseThisUserNameAndEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Will be cloned into.
        /// </summary>
        internal static string StrsWillBeClonedInto {
            get {
                return ResourceManager.GetString("StrsWillBeClonedInto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Switch Branch.
        /// </summary>
        internal static string StrSwitchBranch {
            get {
                return ResourceManager.GetString("StrSwitchBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Working directory.
        /// </summary>
        internal static string StrsWorkingDirectory {
            get {
                return ResourceManager.GetString("StrsWorkingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Working directory clean.
        /// </summary>
        internal static string StrsWorkingDirectoryClean {
            get {
                return ResourceManager.GetString("StrsWorkingDirectoryClean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на System.
        /// </summary>
        internal static string StrSystem {
            get {
                return ResourceManager.GetString("StrSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tag.
        /// </summary>
        internal static string StrTag {
            get {
                return ResourceManager.GetString("StrTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tags.
        /// </summary>
        internal static string StrTags {
            get {
                return ResourceManager.GetString("StrTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tag Type.
        /// </summary>
        internal static string StrTagType {
            get {
                return ResourceManager.GetString("StrTagType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Template.
        /// </summary>
        internal static string StrTemplate {
            get {
                return ResourceManager.GetString("StrTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на To.
        /// </summary>
        internal static string StrTo {
            get {
                return ResourceManager.GetString("StrTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на To Branch.
        /// </summary>
        internal static string StrToBranch {
            get {
                return ResourceManager.GetString("StrToBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Topological Order.
        /// </summary>
        internal static string StrTopoOrder {
            get {
                return ResourceManager.GetString("StrTopoOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Track.
        /// </summary>
        internal static string StrTrack {
            get {
                return ResourceManager.GetString("StrTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tracking.
        /// </summary>
        internal static string StrTracking {
            get {
                return ResourceManager.GetString("StrTracking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tracking branch.
        /// </summary>
        internal static string StrTrackingBranch {
            get {
                return ResourceManager.GetString("StrTrackingBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tracking Branches.
        /// </summary>
        internal static string StrTrackingBranches {
            get {
                return ResourceManager.GetString("StrTrackingBranches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tree.
        /// </summary>
        internal static string StrTree {
            get {
                return ResourceManager.GetString("StrTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tree Hash.
        /// </summary>
        internal static string StrTreeHash {
            get {
                return ResourceManager.GetString("StrTreeHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type.
        /// </summary>
        internal static string StrType {
            get {
                return ResourceManager.GetString("StrType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на uncommitted.
        /// </summary>
        internal static string StrUncommitted {
            get {
                return ResourceManager.GetString("StrUncommitted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на uncommitted staged changes.
        /// </summary>
        internal static string StrUncommittedLocalChanges {
            get {
                return ResourceManager.GetString("StrUncommittedLocalChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на UNIX Timestamp.
        /// </summary>
        internal static string StrUNIXTimestamp {
            get {
                return ResourceManager.GetString("StrUNIXTimestamp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на unresolved conflicts present.
        /// </summary>
        internal static string StrUnresolvedConflictsPresent {
            get {
                return ResourceManager.GetString("StrUnresolvedConflictsPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unset.
        /// </summary>
        internal static string StrUnset {
            get {
                return ResourceManager.GetString("StrUnset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unstage.
        /// </summary>
        internal static string StrUnstage {
            get {
                return ResourceManager.GetString("StrUnstage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unstage All.
        /// </summary>
        internal static string StrUnstageAll {
            get {
                return ResourceManager.GetString("StrUnstageAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unstaged Changes.
        /// </summary>
        internal static string StrUnstagedChanges {
            get {
                return ResourceManager.GetString("StrUnstagedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на unstaged local changes.
        /// </summary>
        internal static string StrUnstagedLocalChanges {
            get {
                return ResourceManager.GetString("StrUnstagedLocalChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unstage Selection.
        /// </summary>
        internal static string StrUnstageSelection {
            get {
                return ResourceManager.GetString("StrUnstageSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Untracked.
        /// </summary>
        internal static string StrUntracked {
            get {
                return ResourceManager.GetString("StrUntracked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Untracked Files.
        /// </summary>
        internal static string StrUntrackedFiles {
            get {
                return ResourceManager.GetString("StrUntrackedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на untracked files are present.
        /// </summary>
        internal static string StrUntrackedFilesPresent {
            get {
                return ResourceManager.GetString("StrUntrackedFilesPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Update.
        /// </summary>
        internal static string StrUpdate {
            get {
                return ResourceManager.GetString("StrUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Updated.
        /// </summary>
        internal static string StrUpdated {
            get {
                return ResourceManager.GetString("StrUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на URL.
        /// </summary>
        internal static string StrUrl {
            get {
                return ResourceManager.GetString("StrUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use default e-mail address&apos;s key.
        /// </summary>
        internal static string StrUseDefaultEmailKey {
            get {
                return ResourceManager.GetString("StrUseDefaultEmailKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use given key id.
        /// </summary>
        internal static string StrUseKeyId {
            get {
                return ResourceManager.GetString("StrUseKeyId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use Ours.
        /// </summary>
        internal static string StrUseOurs {
            get {
                return ResourceManager.GetString("StrUseOurs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User.
        /// </summary>
        internal static string StrUser {
            get {
                return ResourceManager.GetString("StrUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User Identification.
        /// </summary>
        internal static string StrUserIdentification {
            get {
                return ResourceManager.GetString("StrUserIdentification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Username.
        /// </summary>
        internal static string StrUsername {
            get {
                return ResourceManager.GetString("StrUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Users.
        /// </summary>
        internal static string StrUsers {
            get {
                return ResourceManager.GetString("StrUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use template directory.
        /// </summary>
        internal static string StrUseTemplateDirectory {
            get {
                return ResourceManager.GetString("StrUseTemplateDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use Theirs.
        /// </summary>
        internal static string StrUseTheirs {
            get {
                return ResourceManager.GetString("StrUseTheirs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use thin pack.
        /// </summary>
        internal static string StrUseThinPack {
            get {
                return ResourceManager.GetString("StrUseThinPack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use with caution.
        /// </summary>
        internal static string StrUseWithCaution {
            get {
                return ResourceManager.GetString("StrUseWithCaution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value.
        /// </summary>
        internal static string StrValue {
            get {
                return ResourceManager.GetString("StrValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на VCS.
        /// </summary>
        internal static string StrVCS {
            get {
                return ResourceManager.GetString("StrVCS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Vertical Split.
        /// </summary>
        internal static string StrVerticalSplit {
            get {
                return ResourceManager.GetString("StrVerticalSplit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на View Diff.
        /// </summary>
        internal static string StrViewDiff {
            get {
                return ResourceManager.GetString("StrViewDiff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на View Reflog.
        /// </summary>
        internal static string StrViewReflog {
            get {
                return ResourceManager.GetString("StrViewReflog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на View Tree.
        /// </summary>
        internal static string StrViewTree {
            get {
                return ResourceManager.GetString("StrViewTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Visible References.
        /// </summary>
        internal static string StrVisibleReferences {
            get {
                return ResourceManager.GetString("StrVisibleReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Waiting for merge tool to close.
        /// </summary>
        internal static string StrWaitingMergeTool {
            get {
                return ResourceManager.GetString("StrWaitingMergeTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Working Directory.
        /// </summary>
        internal static string StrWorkingDirectory {
            get {
                return ResourceManager.GetString("StrWorkingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Working Tree.
        /// </summary>
        internal static string StrWorkingTree {
            get {
                return ResourceManager.GetString("StrWorkingTree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Apply a patch to files and/or to the index.
        /// </summary>
        internal static string TipApplyPatches {
            get {
                return ResourceManager.GetString("TipApplyPatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Switch HEAD to newly created branch..
        /// </summary>
        internal static string TipCheckoutAfterCreation {
            get {
                return ResourceManager.GetString("TipCheckoutAfterCreation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Checkout a branch to the working tree.
        /// </summary>
        internal static string TipCheckoutBranch {
            get {
                return ResourceManager.GetString("TipCheckoutBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Apply the changes introduced by some existing commits.
        /// </summary>
        internal static string TipCherryPick {
            get {
                return ResourceManager.GetString("TipCherryPick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The cherry-pick is done against the beginning state of your index and no commit is created in process..
        /// </summary>
        internal static string TipCherryPickNoCommit {
            get {
                return ResourceManager.GetString("TipCherryPickNoCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove untracked files from the working tree.
        /// </summary>
        internal static string TipClean {
            get {
                return ResourceManager.GetString("TipClean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clone a repository into a new directory.
        /// </summary>
        internal static string TipClone {
            get {
                return ResourceManager.GetString("TipClone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Record changes to the repository.
        /// </summary>
        internal static string TipCommit {
            get {
                return ResourceManager.GetString("TipCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create new branch.
        /// </summary>
        internal static string TipCreateBranch {
            get {
                return ResourceManager.GetString("TipCreateBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create new tag.
        /// </summary>
        internal static string TipCreateTag {
            get {
                return ResourceManager.GetString("TipCreateTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Download objects and refs from another repository.
        /// </summary>
        internal static string TipFetch {
            get {
                return ResourceManager.GetString("TipFetch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Matches the working tree and index to that of the tree being switched to..
        /// </summary>
        internal static string TipHardReset {
            get {
                return ResourceManager.GetString("TipHardReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show repository history.
        /// </summary>
        internal static string TipHistory {
            get {
                return ResourceManager.GetString("TipHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create an empty git repository or reinitialize an existing one.
        /// </summary>
        internal static string TipInit {
            get {
                return ResourceManager.GetString("TipInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Resets index entries and updates files in the working tree that are different between commit and HEAD..
        /// </summary>
        internal static string TipKeepReset {
            get {
                return ResourceManager.GetString("TipKeepReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Join two or more development histories together.
        /// </summary>
        internal static string TipMerge {
            get {
                return ResourceManager.GetString("TipMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Perform the merge but pretend the merge failed and do not autocommit, to give the user a chance
        ///to inspect and further tweak the merge result before committing..
        /// </summary>
        internal static string TipMergeNoCommit {
            get {
                return ResourceManager.GetString("TipMergeNoCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Resets the index and updates the files in the working tree that are different between commit and HEAD, but keeps those which are different between the index and working tree..
        /// </summary>
        internal static string TipMergeReset {
            get {
                return ResourceManager.GetString("TipMergeReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Resets the index but not the working tree (i.e., the changed files are preserved but not marked for commit)..
        /// </summary>
        internal static string TipMixedReset {
            get {
                return ResourceManager.GetString("TipMixedReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Generate a merge commit even if the merge resolved as a fast-forward..
        /// </summary>
        internal static string TipNoFF {
            get {
                return ResourceManager.GetString("TipNoFF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The first commit made on this new branch will have no parents and it will be the root of
        ///a new history totally disconnected from all the other branches and commits..
        /// </summary>
        internal static string TipOrphan {
            get {
                return ResourceManager.GetString("TipOrphan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fetch from and merge with another repository or a local branch.
        /// </summary>
        internal static string TipPull {
            get {
                return ResourceManager.GetString("TipPull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Update remote refs along with associated objects.
        /// </summary>
        internal static string TipPush {
            get {
                return ResourceManager.GetString("TipPush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Usually, the command refuses to update a remote ref that is not an ancestor
        ///of the local ref used to overwrite it. This flag disables the check.
        ///This can cause the remote repository to lose commits; use it with care..
        /// </summary>
        internal static string TipPushForceOverwrite {
            get {
                return ResourceManager.GetString("TipPushForceOverwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Forward-port local commits to the updated upstream head.
        /// </summary>
        internal static string TipRebase {
            get {
                return ResourceManager.GetString("TipRebase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This activates recording of all changes made to the branch ref, enabling use of date based sha1 expressions
        ///such as &quot;&lt;branchname&gt;@{yesterday}&quot;. Note that in non-bare repositories, reflogs are usually enabled by default
        ///by the core.logallrefupdates config option..
        /// </summary>
        internal static string TipReflog {
            get {
                return ResourceManager.GetString("TipReflog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The URL of a remote repository..
        /// </summary>
        internal static string TipRemoteFetchURL {
            get {
                return ResourceManager.GetString("TipRemoteFetchURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If enabled, pushing to this remote will automatically behave
        ///as if the --mirror option was given on the command line..
        /// </summary>
        internal static string TipRemoteMirror {
            get {
                return ResourceManager.GetString("TipRemoteMirror", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на For remotes that require curl (http, https and ftp), the URL to the
        ///proxy to use for that remote.
        ///Set to the empty string to disable proxying for this remote..
        /// </summary>
        internal static string TipRemoteProxy {
            get {
                return ResourceManager.GetString("TipRemoteProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The push URL of a remote repository..
        /// </summary>
        internal static string TipRemotePushURL {
            get {
                return ResourceManager.GetString("TipRemotePushURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The default program to execute on the remote side when pushing..
        /// </summary>
        internal static string TipRemoteReceivePack {
            get {
                return ResourceManager.GetString("TipRemoteReceivePack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If enabled, this remote will be skipped by default when updating
        ///using git-fetch or the update subcommand of git-remote..
        /// </summary>
        internal static string TipRemoteSkipFetchAll {
            get {
                return ResourceManager.GetString("TipRemoteSkipFetchAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The default program to execute on the remote side when fetching..
        /// </summary>
        internal static string TipRemoteUploadPack {
            get {
                return ResourceManager.GetString("TipRemoteUploadPack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Setting this to a value &lt;vcs&gt; will cause git to interact
        ///with the remote with the git-remote-&lt;vcs&gt; helper..
        /// </summary>
        internal static string TipRemoteVCS {
            get {
                return ResourceManager.GetString("TipRemoteVCS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The revert is done against the beginning state of your index and no commit is created in process..
        /// </summary>
        internal static string TipRevertNoCommit {
            get {
                return ResourceManager.GetString("TipRevertNoCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All refs under refs/tags are pushed..
        /// </summary>
        internal static string TipSendTags {
            get {
                return ResourceManager.GetString("TipSendTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Does not touch the index file nor the working tree at all, but requires them to be in a good order..
        /// </summary>
        internal static string TipSoftReset {
            get {
                return ResourceManager.GetString("TipSoftReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Produce the working tree and index state as if a real merge happened (except for the merge
        ///information), but do not actually make a commit or move the HEAD, nor record
        ///$GIT_DIR/MERGE_HEAD to cause the next git commit command to create a merge commit..
        /// </summary>
        internal static string TipSquash {
            get {
                return ResourceManager.GetString("TipSquash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stash the changes in a dirty working directory away.
        /// </summary>
        internal static string TipStash {
            get {
                return ResourceManager.GetString("TipStash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do not stash any staged changes.
        /// </summary>
        internal static string TipStashKeepIndex {
            get {
                return ResourceManager.GetString("TipStashKeepIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save your local modifications to a new stash, and run git reset --hard to revert them.
        /// </summary>
        internal static string TipStashSave {
            get {
                return ResourceManager.GetString("TipStashSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Set up configuration to mark the start-point branch as &quot;upstream&quot; from the new branch.
        ///This configuration will tell git to show the relationship between the two branches in git status and git branch -v.
        ///Furthermore, it directs git pull without arguments to pull from the upstream when the new branch is checked out.
        ///
        ///This behavior is the default when the start point is a remote branch..
        /// </summary>
        internal static string TipTrack {
            get {
                return ResourceManager.GetString("TipTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A thin transfer significantly reduces the amount of sent data when the sender and receiver
        ///share many of the same objects in common. Enabled by default..
        /// </summary>
        internal static string TipUseTinPack {
            get {
                return ResourceManager.GetString("TipUseTinPack", resourceCulture);
            }
        }
    }
}
